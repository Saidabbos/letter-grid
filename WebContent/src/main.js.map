{"version":3,"sources":["main.js","../ts/src/App.ts","../ts/src/screen/TryAgainWindow.ts","../ts/src/FitScaleManager.ts","../ts/src/core/Gameplay.ts","../ts/src/scene/Boot.ts","../ts/src/scene/MainScene.ts","../ts/src/scene/Preloader.ts","../ts/src/screen/AreYouSureWindow.ts","../ts/src/screen/CompleteWindow.ts","../ts/src/screen/GameplayScreen.ts","../ts/src/screen/InstructionPage.ts"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","Constructor","protoProps","staticProps","_createForOfIteratorHelper","o","allowArrayLike","it","Array","isArray","_unsupportedIterableToArray","F","s","n","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","return","minLen","_arrayLikeToArray","toString","call","slice","name","from","test","arr","len","arr2","_classCallCheck","instance","_inherits","subClass","superClass","create","_setPrototypeOf","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","result","Super","_getPrototypeOf","NewTarget","this","Reflect","construct","arguments","apply","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Date","getPrototypeOf","game","sh","App","_Phaser$Game","Phaser","Game","_super","_this","config","type","AUTO","width","CANVAS_WIDTH","height","CANVAS_HEIGHT","scale","mode","FitScaleManager","detectBestScaleMode","autoCenter","Scale","CENTER_BOTH","transparent","scene","add","Boot","window","onload","delayedCalls","delayedCall","delay","callback","args","callbackScope","getAt","dc","time","push","t","setTimeout","destroyAllDelayedCalls","_step","_iterator","Time","TimerEvent","remove","clearTimeout","setPageBackground","bg","document","querySelector","style","backgroundImage","setupButton","btn","frame","on","setFrame","sound","play","setupButtonTextureBased","texture","hoverTexture","setTexture","_this2","doResize","calculateScale","newCanvasWidth","phaserScaleManager","newCanvasHeight","canvasStyle","marginLeft","innerWidth","marginTop","innerHeight","canvas","addListener","Events","RESIZE","onResize","overridePhaserTransformMethods","scaleMode","NONE","Math","min","_this3","transformX","pageX","parseInt","split","transformY","pageY","RESIZE_DELAY","iOS","navigator","platform","isAndroid","userAgent","toLowerCase","indexOf","FIT","core","Gameplay","allLettersNames","currentRound","currentLetter","correctAnswersCount","wrongAnswersCount","reset","json","cache","get","letters","onComplete","onLose","isNewRound","nextLetter","onLetterChosen","getCurrentTotalAnswersCount","_Phaser$Scene","Scene","_super2","setup","Preloader","MainScene","_Phaser$Scene2","_super3","gameplay","gameplayScreen","screen","GameplayScreen","children","showInstructionPage","_Phaser$Scene3","_super4","_this4","load","pack","nextScene","start","AreYouSureWindow","_Phaser$GameObjects$C","GameObjects","Container","_super5","onYes","onNo","_this5","_areYouSurePage","Image","setOrigin","setInteractive","_btnSureYes","cursor","once","_btnSureNo","CompleteWindow","_Phaser$GameObjects$C2","_super6","onBack","onReplay","onNext","_this6","music","setPosition","_bgComplete","_cup","_btnBack","_btnReplay","_btnNext","_CollectedPoints","totalScoreTxt","text","fontFamily","fontSize","color","align","stroke","strokeThickness","grd","context","createLinearGradient","addColorStop","setFill","starScoreTxt","stop","score","starScore","tweens","targets","duration","ease","Easing","Back","Out","String","_Phaser$GameObjects$C3","_super7","_this7","bgMusic","soundGooseYes","soundGooseNo","correctAudio","wfsnd","showCompleteWindow","completeWindow","playBtnClickAnim","destroyGameplay","setInputEnabled","show","showLoseWindow","tryAgainWindow","TryAgainWindow","loop","_gameStage","_btnSound","_btnClose","gameplayContainer","addAt","setupCallbacks","completed","onCorrectAnswer","lost","onWrongAnswer","getCorrectAudioKey","areYouSureWindow","parentContainer","pause","playCorrectAudio","showAreYouSurePage","scaleX","scaleY","yoyo","_this8","playInstructionSound","instructionPage","InstructionPage","showGameplay","_this9","pauseSounds","unpauseSounds","enabled","_step2","_iterator2","hexagons","_step3","_iterator3","disableInteractive","resume","_Phaser$GameObjects$C4","_super8","onPlayClick","onSndClick","_this10","_instructionPage","_instructionPageTitle","_btnPlay","instrTxt","_btnSoundInstruction","_Phaser$GameObjects$C5","_super9","_this11","_bg","_star"],"mappings":"AAAA,aAEA,SAASA,QAAQC,GAAmV,OAAtOD,QAArD,mBAAXE,QAAoD,iBAApBA,OAAOC,SAAmC,SAAiBF,GAAO,cAAcA,GAA2B,SAAiBA,GAAO,OAAOA,GAAyB,mBAAXC,QAAyBD,EAAIG,cAAgBF,QAAUD,IAAQC,OAAOG,UAAY,gBAAkBJ,IAAyBA,GAEnX,SAASK,kBAAkBC,EAAQC,GAAS,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAE,IAAIE,EAAaH,EAAMC,GAAIE,EAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,UAAWF,IAAYA,EAAWG,UAAW,GAAMC,OAAOC,eAAeT,EAAQI,EAAWM,IAAKN,IAE7S,SAASO,aAAaC,EAAaC,EAAYC,GAAmJ,OAAhID,GAAYd,kBAAkBa,EAAYd,UAAWe,GAAiBC,GAAaf,kBAAkBa,EAAaE,GAAqBF,EAEzM,SAASG,2BAA2BC,EAAGC,GAAkB,IAAIC,EAAI,GAAsB,oBAAXvB,QAAgD,MAAtBqB,EAAErB,OAAOC,UAAmB,CAAE,GAAIuB,MAAMC,QAAQJ,KAAOE,EAAKG,4BAA4BL,KAAOC,GAAkBD,GAAyB,iBAAbA,EAAEb,OAAqB,CAAMe,IAAIF,EAAIE,GAAI,IAAIhB,EAAI,EAAOoB,EAAI,aAAiB,MAAO,CAAEC,EAAGD,EAAGE,EAAG,WAAe,OAAItB,GAAKc,EAAEb,OAAe,CAAEsB,MAAM,GAAe,CAAEA,MAAM,EAAOC,MAAOV,EAAEd,OAAWyB,EAAG,SAAWC,GAAM,MAAMA,GAAOC,EAAGP,GAAO,MAAM,IAAIQ,UAAU,yIAA4I,IAA6CC,EAAzCC,GAAmB,EAAMC,GAAS,EAAY,MAAO,CAAEV,EAAG,WAAeL,EAAKF,EAAErB,OAAOC,aAAgB4B,EAAG,WAAe,IAAIU,EAAOhB,EAAGiB,OAAsC,OAA9BH,EAAmBE,EAAKT,KAAaS,GAASP,EAAG,SAAWS,GAAOH,GAAS,EAAMF,EAAMK,GAAQP,EAAG,WAAe,IAAWG,GAAiC,MAAbd,EAAGmB,QAAgBnB,EAAGmB,SAAY,QAAU,GAAIJ,EAAQ,MAAMF,KAEl9B,SAASV,4BAA4BL,EAAGsB,GAAU,GAAKtB,EAAL,CAAgB,GAAiB,iBAANA,EAAgB,OAAOuB,kBAAkBvB,EAAGsB,GAAS,IAAId,EAAIhB,OAAOV,UAAU0C,SAASC,KAAKzB,GAAG0B,MAAM,GAAI,GAAiE,MAAnD,WAANlB,GAAkBR,EAAEnB,cAAa2B,EAAIR,EAAEnB,YAAY8C,MAAgB,QAANnB,GAAqB,QAANA,EAAoBL,MAAMyB,KAAK5B,GAAc,cAANQ,GAAqB,2CAA2CqB,KAAKrB,GAAWe,kBAAkBvB,EAAGsB,QAAzG,GAE7S,SAASC,kBAAkBO,EAAKC,IAAkB,MAAPA,GAAeA,EAAMD,EAAI3C,UAAQ4C,EAAMD,EAAI3C,QAAQ,IAAK,IAAID,EAAI,EAAG8C,EAAO,IAAI7B,MAAM4B,GAAM7C,EAAI6C,EAAK7C,IAAO8C,EAAK9C,GAAK4C,EAAI5C,GAAM,OAAO8C,EAEhL,SAASC,gBAAgBC,EAAUtC,GAAe,KAAMsC,aAAoBtC,GAAgB,MAAM,IAAIkB,UAAU,qCAEhH,SAASqB,UAAUC,EAAUC,GAAc,GAA0B,mBAAfA,GAA4C,OAAfA,EAAuB,MAAM,IAAIvB,UAAU,sDAAyDsB,EAAStD,UAAYU,OAAO8C,OAAOD,GAAcA,EAAWvD,UAAW,CAAED,YAAa,CAAE6B,MAAO0B,EAAU7C,UAAU,EAAMD,cAAc,KAAe+C,GAAYE,gBAAgBH,EAAUC,GAEnX,SAASE,gBAAgBvC,EAAGwC,GAA+G,OAA1GD,gBAAkB/C,OAAOiD,gBAAkB,SAAyBzC,EAAGwC,GAAsB,OAAjBxC,EAAE0C,UAAYF,EAAUxC,IAA6BA,EAAGwC,GAErK,SAASG,aAAaC,GAAW,IAAIC,EAA4BC,4BAA6B,OAAO,WAAkC,IAAsCC,EAAlCC,EAAQC,gBAAgBL,GAAkB,GAAIC,EAA2B,CAAE,IAAIK,EAAYD,gBAAgBE,MAAMtE,YAAakE,EAASK,QAAQC,UAAUL,EAAOM,UAAWJ,QAAqBH,EAASC,EAAMO,MAAMJ,KAAMG,WAAc,OAAOE,2BAA2BL,KAAMJ,IAE5Z,SAASS,2BAA2BC,EAAMhC,GAAQ,OAAIA,GAA2B,WAAlBhD,QAAQgD,IAAsC,mBAATA,EAA8CiC,uBAAuBD,GAAtChC,EAEnI,SAASiC,uBAAuBD,GAAQ,QAAa,IAATA,EAAmB,MAAM,IAAIE,eAAe,6DAAgE,OAAOF,EAE/J,SAASX,4BAA8B,GAAuB,oBAAZM,UAA4BA,QAAQC,UAAW,OAAO,EAAO,GAAID,QAAQC,UAAUO,KAAM,OAAO,EAAO,GAAqB,mBAAVC,MAAsB,OAAO,EAAM,IAAiF,OAA3EC,KAAKhF,UAAU0C,SAASC,KAAK2B,QAAQC,UAAUS,KAAM,IAAI,iBAAyB,EAAQ,MAAOnD,GAAK,OAAO,GAE1T,SAASsC,gBAAgBjD,GAAwJ,OAAnJiD,gBAAkBzD,OAAOiD,eAAiBjD,OAAOuE,eAAiB,SAAyB/D,GAAK,OAAOA,EAAE0C,WAAalD,OAAOuE,eAAe/D,KAA8BA,GC5BxM,IA2BIgE,MA3BJ,SAAUC,GAAE,IACKC,EADL,SAAAC,GAAAhC,UAAA+B,EACiBE,OAAOC,MADxB,IAAAC,EAAA3B,aAAAuB,GAMJ,SAAAA,IAAA,IAAAK,EAAAtC,gBAAAkB,KAAAe,GACI,IAAIM,EAAuC,CACvCC,KAAML,OAAOM,KACbC,MAAOT,EAAIU,aACXC,OAAQX,EAAIY,cACZC,MAAO,CACHC,KAAMC,gBAAgBC,sBACtBC,WAAYf,OAAOgB,MAAMC,aAE7BC,aAAa,EACbC,MAAO,CACHjD,OAAQ,WACJiC,EAAKgB,MAAMC,IAAI,OAAQvB,EAAGsB,MAAME,MAAM,MAZtD,OAAAlB,EAAAD,EAAA7C,KAAA0B,KAgBUqB,GAtBN,OAAAN,EAAA,GAGmBA,EAAAU,aAAuB,IACvBV,EAAAY,cAAwB,IAHtCb,EAAAC,IAAGA,EADpB,CAAUD,KAAAA,GAAE,KA4BZyB,OAAOC,OAAS,WACZ3B,KAAO,IAAIC,GAAGC,KAGlB,IAAI0B,aAAe,GACnB,SAASC,YAAYC,EAAeC,EAAoBC,EAAcC,GAClE,IAAIV,EAAQvB,KAAKuB,MAAMW,MAAM,GAC7B,GAAIX,EAAO,CACP,IAAIY,EAAKZ,EAAMa,KAAKP,YAAYC,EAAOC,EAAUC,EAAMC,GAEvD,OADAL,aAAaS,KAAKF,GACXA,EAEX,IAAIG,EAAIC,WAAWR,EAAUD,GAE7B,OADAF,aAAaS,KAAKC,GACXA,EAEX,SAASE,yBAAsB,IAAAC,EAAAC,EAAA3G,2BACZ6F,cADY,IAC3B,IAAAc,EAAAnG,MAAAkG,EAAAC,EAAAlG,KAAAC,MAA6B,CAAA,IAApB0F,EAAoBM,EAAA/F,MACrByF,aAAc/B,OAAOuC,KAAKC,WACzBT,EAA8BU,QAAO,GAEtCC,aAAaX,IALM,MAAApF,GAAA2F,EAAA/F,EAAAI,GAAA,QAAA2F,EAAA7F,IAQ3B+E,aAAe,GAGnB,SAASmB,kBAAkBC,GACvBC,SAASC,cAAc,QAAQC,MAAMC,gBAAkB,mBAAqBJ,EAAK,QAGrF,SAASK,YAAYC,EAAKC,GACtBD,EAAIE,GAAG,eAAe,WAAKF,EAAIG,SAASF,EAAAA,iBACxCD,EAAIE,GAAG,eAAe,WAAKF,EAAIG,SAASF,EAAAA,cAA2BvD,KAAKuB,MAAMW,MAAM,GAAGwB,MAAMlC,IAAI,gBAAgBmC,UACjHL,EAAIE,GAAG,cAAc,WAAKF,EAAIG,SAASF,EAAQ,WAC/CD,EAAIE,GAAG,aAAa,WAAKF,EAAIG,SAASF,EAAQ,QAAQvD,KAAKuB,MAAMW,MAAM,GAAGwB,MAAMlC,IAAI,yCAAyCmC,UAEjI,SAASC,wBAAwBN,EAA8BO,EAASC,GACpER,EAAIE,GAAG,eAAe,WAAKF,EAAIS,WAAWD,MAC1CR,EAAIE,GAAG,eAAe,WAAKF,EAAIS,WAAWD,GAAc9D,KAAKuB,MAAMW,MAAM,GAAGwB,MAAMlC,IAAI,gBAAgBmC,UACtGL,EAAIE,GAAG,cAAc,WAAKF,EAAIS,WAAWF,MACzCP,EAAIE,GAAG,aAAa,WAAKF,EAAIS,WAAWF,GAAS7D,KAAKuB,MAAMW,MAAM,GAAGwB,MAAMlC,IAAI,yCAAyCmC,UD6F5H,IElKU1D,GCSJgB,gBHyJ6B,WG1I/B,SAAAA,EAAYjB,GAAiB,IAAAgE,EAAA7E,KAAAlB,gBAAAkB,KAAA8B,GAwCrB9B,KAAA8E,SAAuB,WAC3B,IAAIlD,EAAgBiD,EAAKE,iBAErBC,EAAyBH,EAAKI,mBAAmBzD,MAAQI,EACzDsD,EAA0BL,EAAKI,mBAAmBvD,OAASE,EAE/DiD,EAAKM,YAAY3D,MAAQwD,EAAiB,KAC1CH,EAAKM,YAAYzD,OAASwD,EAAkB,KAE5CL,EAAKM,YAAYC,YAAc7C,OAAO8C,WAAaL,GAAkB,EAAI,KACzEH,EAAKM,YAAYG,WAAa/C,OAAOgD,YAAcL,GAAmB,EAAI,MAjD1ElF,KAAKa,KAAOA,EAEZb,KAAKmF,YAAcnF,KAAKa,KAAK2E,OAAOxB,MACpChE,KAAKiF,mBAAqBjF,KAAKa,KAAKe,MHwM1C,OA5CApF,aAAasF,EAAiB,CAAC,CAC7BvF,IAAK,QAKLgB,MAAO,WG3JHyC,KAAKiF,mBAAmBQ,YAAYxE,OAAOgB,MAAMyD,OAAOC,OAAQ3F,KAAK4F,SAAU5F,MAE/EA,KAAK6F,iCAEL7F,KAAK4F,aH4JR,CACDrJ,IAAK,iBACLgB,MAAO,WG1JH,OAAIsD,KAAKe,MAAMkE,WAAa7E,OAAOgB,MAAM8D,KAAa,EAE/CC,KAAKC,IACR1D,OAAO8C,WAAarF,KAAKiF,mBAAmBzD,MAC5Ce,OAAOgD,YAAcvF,KAAKiF,mBAAmBvD,UH0JpD,CACDnF,IAAK,iCACLgB,MAAO,WGxJ+B,IAAA2I,EAAAlG,KAClCA,KAAKa,KAAKe,MAAMuE,WAAa,SAACC,GAC1B,OAAQA,EAAQC,SAASH,EAAKf,YAAYC,WAAWkB,MAAM,MAAM,KAAOJ,EAAKnB,kBAEjF/E,KAAKa,KAAKe,MAAM2E,WAAa,SAACC,GAC1B,OAAQA,EAAQH,SAASH,EAAKf,YAAYG,UAAUgB,MAAM,MAAM,KAAOJ,EAAKnB,oBH8JnF,CACDxI,IAAK,WACLgB,MAAO,WG3JH6F,WAAWpD,KAAK8E,SAAUhD,EAAgB2E,iBH8J5C,CAAC,CACHlK,IAAK,sBACLgB,MAAO,WGjNH,IAAImJ,EAAM,mBAAmBhI,KAAKiI,UAAUC,UAAY,IACpDC,EAAYtE,OAAOoE,UAAUG,UAAUC,cAAcC,QAAQ,YAAc,EAC/E,OAAON,GAAOG,EAAY5F,OAAOgB,MAAMgF,IAAMhG,OAAOgB,MAAM8D,SHsNzDjE,EAlE0B,GGjJhBA,gBAAA2E,aAAuB,ICjB1C,SAAU3F,IAAG,SAAAoG,GAAI,IACAC,EADA,WAeT,SAAAA,IAAArI,gBAAAkB,KAAAmH,GAZgBnH,KAAAoH,gBAA2B,CAAC,IAAK,IAAK,IAAK,KAEnDpH,KAAAqH,aAAsB,EACtBrH,KAAAsH,cAAuB,EAGvBtH,KAAAuH,oBAA8B,EAC9BvH,KAAAwH,kBAA4B,EAMhCxH,KAAKyH,QACL,IAAIC,EAAO7G,KAAK8G,MAAMD,KAAKE,IAAI,YAC/B5H,KAAK6H,QAAUH,EAAI,QAlBd,OAAAlL,aAAA2K,EAAA,CAAA,CAAA5K,IAAA,iBAAAgB,MAAA,SAqBauK,EAAmDC,GACrE/H,KAAK8H,WAAaA,EAClB9H,KAAK+H,OAASA,IAvBT,CAAAxL,IAAA,iBAAAgB,MAAA,WA2BL,GAAIyC,KAAKgI,aAAc,CAEnB,GADAhI,KAAKqH,eACDrH,KAAKqH,cAAgB,EAErB,OADArH,KAAK8H,WAAW9H,KAAKuH,oBAAqBvH,KAAKuH,sBACxC,EAEPvH,KAAKiI,aAGb,OAAO,IApCF,CAAA1L,IAAA,aAAAgB,MAAA,WAwCDyC,KAAKsH,eAAiBtH,KAAK6H,QAAQ7L,OAAS,EAC5CgE,KAAKsH,cAAgB,EAErBtH,KAAKsH,kBA3CJ,CAAA/K,IAAA,uBAAAgB,MAAA,WAkDL,OAAOyC,KAAK6H,QAAQ7H,KAAKsH,eAAlB,oBAlDF,CAAA/K,IAAA,qBAAAgB,MAAA,WAsDL,OAAOyC,KAAK6H,QAAQ7H,KAAKsH,eAAlB,kBAtDF,CAAA/K,IAAA,kBAAAgB,MAAA,WA4DL,OAFAyC,KAAKuH,sBAEEvH,KAAKkI,mBA5DP,CAAA3L,IAAA,gBAAAgB,MAAA,WAkEL,OAFAyC,KAAKwH,oBAEDxH,KAAKwH,mBAAqB,GAC1BxH,KAAK+H,OAAO/H,KAAKuH,oBAAqBvH,KAAKuH,sBACpC,IAEPvH,KAAKkI,kBAEF,KAxEF,CAAA3L,IAAA,8BAAAgB,MAAA,WA4EL,OAAOyC,KAAKuH,oBAAsBvH,KAAKwH,oBA5ElC,CAAAjL,IAAA,aAAAgB,MAAA,WAgFL,OAAOyC,KAAKmI,8BAAgC,GAAK,IAhF5C,CAAA5L,IAAA,mBAAAgB,MAAA,WAoFL,OAAOyC,KAAKmI,8BAAgC,GAAK,IApF5C,CAAA5L,IAAA,QAAAgB,MAAA,WAwFLyC,KAAKqH,aAAe,EACpBrH,KAAKsH,cAAgB,EACrBtH,KAAKuH,oBAAsB,EAC3BvH,KAAKwH,kBAAoB,MA3FpBL,EAAA,GACAD,EAAAC,SAAQA,EADZ,CAAArG,EAAAoG,OAAApG,EAAAoG,KAAI,KAAjB,CAAUpG,KAAAA,GAAE,KCAZ,SAAOA,IAAG,SAAAsB,GAAK,IACEE,EADF,SAAA8F,GAAApJ,UAAAsD,EACerB,OAAOoH,OADtB,IAAAC,EAAA9I,aAAA8C,GAAA,SAAAA,IAAA,OAAAxD,gBAAAkB,KAAAsC,GAAAgG,EAAAlI,MAAAJ,KAAAG,WAAA,OAAA3D,aAAA8F,EAAA,CAAA,CAAA/F,IAAA,OAAAgB,MAAA,WAGH,IAAIuE,gBAAgB9B,KAAKa,MAAM0H,UAH5B,CAAAhM,IAAA,SAAAgB,MAAA,WAOHsD,KAAKuB,MAAMsB,OAAO,QAClB7C,KAAKuB,MAAMC,IAAI,YAAavB,EAAGsB,MAAMoG,WAAW,OAR7ClG,EAAA,GACEF,EAAAE,KAAIA,EADX,CAAAxB,EAAAsB,QAAAtB,EAAAsB,MAAK,KAAf,CAAOtB,KAAAA,GAAE,KCAT,SAAUA,IAAG,SAAAsB,GAET,IAAO+E,EAAWrG,EAAGoG,KAAKC,SAGbsB,EALC,SAAAC,GAAA1J,UAAAyJ,EAKiBxH,OAAOoH,OALxB,IAAAM,EAAAnJ,aAAAiJ,GAAA,SAAAA,IAAA,OAAA3J,gBAAAkB,KAAAyI,GAAAE,EAAAvI,MAAAJ,KAAAG,WAAA,OAAA3D,aAAAiM,EAAA,CAAA,CAAAlM,IAAA,SAAAgB,MAAA,WAWNyC,KAAK4I,SAAW,IAAIzB,EAEpBnH,KAAK6I,eAAiB,IAAI/H,EAAGgI,OAAOC,eAAe/I,KAAMA,KAAK4I,UAC9D5I,KAAKgJ,SAAS3G,IAAIrC,KAAK6I,gBACvB7I,KAAK6I,eAAeI,0BAfdR,EAAA,GAKDrG,EAAAqG,UAASA,EALb,CAAA3H,EAAAsB,QAAAtB,EAAAsB,MAAK,KAAlB,CAAUtB,KAAAA,GAAE,KCAZ,SAAOA,IAAG,SAAAsB,GAAK,IAEEoG,EAFF,SAAAU,GAAAlK,UAAAwJ,EAEoBvH,OAAOoH,OAF3B,IAAAc,EAAA3J,aAAAgJ,GAAA,SAAAA,IAAA,OAAA1J,gBAAAkB,KAAAwI,GAAAW,EAAA/I,MAAAJ,KAAAG,WAAA,OAAA3D,aAAAgM,EAAA,CAAA,CAAAjM,IAAA,UAAAgB,MAAA,cAAA,CAAAhB,IAAA,SAAAgB,MAAA,WAOD,IAAA6L,EAAApJ,KACFA,KAAKqJ,KAAK3B,KAAK,WAAY,6BAC3B1H,KAAKqJ,KAAKC,KAAK,YAAa,oBAE5BtJ,KAAKqJ,KAAKhF,GAAG,YAAY,SAAC9G,MACvByC,MAEHA,KAAKqJ,KAAKhF,GAAG,YAAY,WACrB+E,EAAKG,eAGTvJ,KAAKqJ,KAAKG,UAlBP,CAAAjN,IAAA,YAAAgB,MAAA,WAsBHsD,KAAKuB,MAAMsB,OAAO,aAClB7C,KAAKuB,MAAMC,IAAI,aAAcvB,EAAGsB,MAAMqG,WAAW,OAvB9CD,EAAA,GAEEpG,EAAAoG,UAASA,EAFhB,CAAA1H,EAAAsB,QAAAtB,EAAAsB,MAAK,KAAf,CAAOtB,KAAAA,GAAE,KCAT,SAAUA,IAAG,SAAAgI,GAAM,IACFW,EADE,SAAAC,GAAA1K,UAAAyK,EACuBxI,OAAO0I,YAAYC,WAD1C,IAAAC,EAAArK,aAAAiK,GAOX,SAAAA,EAAYrH,EAAqB0H,EAAgBC,GAAa,IAAAC,EAAA,OAAAlL,gBAAAkB,KAAAyJ,IAC1DO,EAAAH,EAAAvL,KAAA0B,KAAMoC,IAED6H,gBAAkB,IAAIhJ,OAAO0I,YAAYO,MAAMF,EAAK5H,OAAQ,KAAK,GAAM,gBAC5E4H,EAAKC,gBAAgBE,UAAU,EAAG,GAClCH,EAAKC,gBAAgBG,iBAErBJ,EAAKK,YAAc,IAAIpJ,OAAO0I,YAAYO,MAAMF,EAAK5H,MAAOvB,KAAKe,MAAMJ,MAAQ,EAAI,GAAI,IAAQ,WAC/FwI,EAAKK,YAAYD,eAAe,CAACE,OAAQ,YACzCN,EAAKK,YAAYE,KAAK,YAAaT,GACnCrF,wBAAwBuF,EAAKK,YAAa,UAAW,WAErDL,EAAKQ,WAAa,IAAIvJ,OAAO0I,YAAYO,MAAMF,EAAK5H,MAAOvB,KAAKe,MAAMJ,MAAQ,EAAI,GAAI,IAAQ,UAC9FwI,EAAKQ,WAAWJ,eAAe,CAACE,OAAQ,YACxCN,EAAKQ,WAAWD,KAAK,YAAaR,GAClCtF,wBAAwBuF,EAAKQ,WAAY,SAAU,UAEnDR,EAAK3H,IAAI2H,EAAKC,iBACdD,EAAK3H,IAAI2H,EAAKK,aACdL,EAAK3H,IAAI2H,EAAKQ,YAnB4CR,EAPnD,OAAAP,EAAA,GACFX,EAAAW,iBAAgBA,EADpB,CAAA3I,EAAAgI,SAAAhI,EAAAgI,OAAM,KAAnB,CAAUhI,KAAAA,GAAE,KCAZ,SAAUA,IAAG,SAAAgI,GAAM,IACF2B,EADE,SAAAC,GAAA1L,UAAAyL,EACqBxJ,OAAO0I,YAAYC,WADxC,IAAAe,EAAAnL,aAAAiL,GAYX,SAAAA,EAAYrI,EAAqBwI,EAAuBC,EAAyBC,GAAqB,IAAAC,EAAAjM,gBAAAkB,KAAAyK,IAClGM,EAAAJ,EAAArM,KAAA0B,KAAMoC,IA0EF4I,MAAQ,KAxEZD,EAAKE,aAAa,OAAQ,IAE1BF,EAAKG,YAAc,IAAIjK,OAAO0I,YAAYO,MAAMa,EAAK3I,MAAO,EAAG,EAAG,kCAClE2I,EAAKG,YAAYf,UAAU,EAAG,GAC9BY,EAAKG,YAAYd,iBACjBW,EAAKI,KAAO,IAAIlK,OAAO0I,YAAYO,MAAMa,EAAK3I,MAAO,IAAK,IAAK,UAC/D2I,EAAKK,SAAW,IAAInK,OAAO0I,YAAYO,MAAMa,EAAK3I,MAAO,IAAK,IAAK,YACnE2I,EAAKM,WAAa,IAAIpK,OAAO0I,YAAYO,MAAMa,EAAK3I,MAAO,IAAK,IAAK,cACrE2I,EAAKO,SAAW,IAAIrK,OAAO0I,YAAYO,MAAMa,EAAK3I,MAAO,IAAK,IAAK,YAEnE,IAAImJ,EAAmB,IAAItK,OAAO0I,YAAYO,MAAMa,EAAK3I,MAAO,IAAK,IAAK,oBAE1E2I,EAAKS,cAAgBT,EAAK3I,MAAMC,IAAIoJ,KAAK,IAAK,IAAK,GAAI,CACnDC,WAAc,iBACdC,SAAY,GACZC,MAAS,UACTC,MAAS,SACTC,OAAU,UACVC,gBAAmB,IAEvBhB,EAAKS,cAAcrB,UAAU,GAAK,IAElC,IAAI6B,EAAMjB,EAAKS,cAAcS,QAAQC,qBAAqB,EAAG,EAAG,EAAGnB,EAAKS,cAAc9J,QAzBY,OA0BlGsK,EAAIG,aAAa,EAAG,WACpBH,EAAIG,aAAa,EAAG,WACpBpB,EAAKS,cAAcY,QAAQJ,GAE3BjB,EAAKsB,aAAetB,EAAK3I,MAAMC,IAAIoJ,KAAK,IAAK,IAAK,GAAI,CAClDC,WAAc,iBACdC,SAAY,GACZC,MAAS,UACTC,MAAS,WAEbd,EAAKsB,aAAalC,UAAU,GAAK,IAEjCY,EAAK1I,IAAI,CACL0I,EAAKG,YACLK,EACAR,EAAKI,KACLJ,EAAKK,SACLL,EAAKM,WACLN,EAAKO,SACLP,EAAKS,cACLT,EAAKsB,eAGTtB,EAAKK,SAAShB,eAAe,CAACE,OAAQ,YACtCS,EAAKK,SAAS/G,GAAG,aAAa,WAC1BuG,EAAOG,EAAKK,aAKhB3G,wBAAwBsG,EAAKK,SAAU,WAAY,YACnDL,EAAKM,WAAWjB,eAAe,CAACE,OAAQ,YACxCS,EAAKM,WAAWd,KAAK,aAAa,WAC9BM,EAASE,EAAKM,YACVN,EAAKC,OACLD,EAAKC,MAAMsB,UAGnB7H,wBAAwBsG,EAAKM,WAAY,aAAc,cACvDN,EAAKO,SAASlB,eAAe,CAACE,OAAQ,YACtCS,EAAKO,SAASjH,GAAG,aAAa,WAC1ByG,EAAOC,EAAKO,aAKhB7G,wBAAwBsG,EAAKO,SAAU,WAAY,YAxE+CP,EAZ3F,OAAAvO,aAAAiO,EAAA,CAAA,CAAAlO,IAAA,OAAAgB,MAAA,SAwFCgP,EAAcC,GACtBxM,KAAKmL,KAAKvJ,MAAQ,KAClB5B,KAAKoC,MAAMqK,OAAOpK,IAAI,CAClBqK,QAAS1M,KAAKmL,KACdvJ,MAAS,EACT+K,SAAU,IACVC,KAAM3L,OAAO+E,KAAK6G,OAAOC,KAAKC,MAGlC/M,KAAKwL,cAAcC,KAAOuB,OAAOT,GACjCvM,KAAKqM,aAAaZ,KAAOuB,OAAOR,GAGhCxM,KAAKgL,MAAQhL,KAAKoC,MAAMmC,MAAMlC,IAAI,iCAClCrC,KAAKgL,MAAMxG,WAtGJiG,EAAA,GACF3B,EAAA2B,eAAcA,EADlB,CAAA3J,EAAAgI,SAAAhI,EAAAgI,OAAM,KAAnB,CAAUhI,KAAAA,GAAE,KCAZ,SAAUA,IAAG,SAAAgI,GAAM,IAIFC,EAJE,SAAAkE,GAAAjO,UAAA+J,EAIqB9H,OAAO0I,YAAYC,WAJxC,IAAAsD,EAAA1N,aAAAuJ,GAkBX,SAAAA,EAAY3G,EAAqBwG,GAAkB,IAAAuE,EAAA,OAAArO,gBAAAkB,KAAA+I,IAC/CoE,EAAAD,EAAA5O,KAAA0B,KAAMoC,IAHFgL,QAAc,KAuCdD,EAAAE,cAAgB,KAUhBF,EAAAG,aAAe,KAUfH,EAAAI,aAAe,KA+BfJ,EAAAK,MAAQ,KA+CTL,EAAAM,mBAAiE,SAAClB,EAAeC,GACpF,IAAIkB,EAAiC,IAAI5E,EAAA2B,eAAe0C,EAAK/K,OAAO,SAACvG,GACjEsR,EAAKQ,iBAAiB9R,MACvB,SAACA,GACAsR,EAAKQ,iBAAiB9R,GACtBsR,EAAKS,kBACLT,EAAKzJ,OAAOgK,GACZP,EAAKlE,yBACN,SAACpN,GACAsR,EAAKQ,iBAAiB9R,MAE1BsR,EAAKU,iBAAgB,GACrBnL,YAAY,KAAK,WACbkB,kBAAkB,WAElBuJ,EAAK9K,IAAIqL,GACTA,EAAeI,KAAKvB,EAAOC,GAE3BW,EAAKC,QAAQd,WAIda,EAAAY,eAA6D,SAACxB,EAAeC,GAChF,IAAIwB,EAAiC,IAAIlF,EAAAmF,eAAed,EAAK/K,OAAO,SAACvG,GACjEsR,EAAKQ,iBAAiB9R,MACvB,SAACA,GACAsR,EAAKQ,iBAAiB9R,GACtBsR,EAAKS,kBACLT,EAAKzJ,OAAOsK,GACZb,EAAKlE,yBAETkE,EAAKU,iBAAgB,GACrBnL,YAAY,KAAK,WACbkB,kBAAkB,WAElBuJ,EAAK9K,IAAI2L,GACTA,EAAeF,KAAKvB,EAAOC,GAE3BW,EAAKC,QAAQd,WA3KjBa,EAAKvE,SAAWA,EAF+BuE,EAlBxC,OAAA3Q,aAAAuM,EAAA,CAAA,CAAAxM,IAAA,eAAAgB,MAAA,WAwBPqG,kBAAkB,gBAElB5D,KAAKoN,QAAUpN,KAAKoC,MAAMmC,MAAMlC,IAAI,YACpCrC,KAAKoN,QAAQ5I,OACbxE,KAAKoN,QAAQc,MAAO,EAEpBlO,KAAK4I,SAASnB,QAEdzH,KAAKmO,WAAa,IAAIlN,OAAO0I,YAAYO,MAAMlK,KAAKoC,MAAOvB,KAAKe,MAAMJ,MAAQ,EAAGX,KAAKe,MAAMF,OAAS,EAAG,MACxG1B,KAAKmO,WAAWhE,UAAU,KAAO,MACjCnK,KAAKmO,WAAW/D,iBAChBpK,KAAKoO,UAAY,IAAInN,OAAO0I,YAAYO,MAAMlK,KAAKoC,MAAO,GAAS,GAAQ,SAC3EpC,KAAKoO,UAAUhE,eAAe,CAACE,OAAQ,YACvC7F,wBAAwBzE,KAAKoO,UAAW,QAAQ,sBAChDpO,KAAKqO,UAAY,IAAIpN,OAAO0I,YAAYO,MAAMlK,KAAKoC,MAAO,IAAU,GAAO,YAC3EpC,KAAKqO,UAAUjE,eAAe,CAACE,OAAQ,YACvC7F,wBAAwBzE,KAAKqO,UAAW,WAAW,yBAEnDrO,KAAKsO,kBAAoB,IAAIrN,OAAO0I,YAAYC,UAAU5J,KAAKoC,OAC/DpC,KAAKuO,MAAMvO,KAAKsO,kBAAmB,GAEnCtO,KAAKsO,kBAAkBjM,IAAI,CACvBrC,KAAKmO,WACLnO,KAAKoO,UACLpO,KAAKqO,YAITrO,KAAK4I,SAAS4F,eAAexO,KAAKyN,mBAAoBzN,KAAK+N,kBApDpD,CAAAxR,IAAA,kBAAAgB,MAAA,WAyDP,IAAIkR,EAAoBzO,KAAK4I,SAAS8F,kBAKtC,OAHA1O,KAAKqN,cAAgBrN,KAAKoC,MAAMmC,MAAMlC,IAAI,aAC1CrC,KAAKqN,cAAc7I,OAEZiK,IA9DA,CAAAlS,IAAA,gBAAAgB,MAAA,WAmEP,IAAIoR,EAAe3O,KAAK4I,SAASgG,gBAKjC,OAHA5O,KAAKsN,aAAetN,KAAKoC,MAAMmC,MAAMlC,IAAI,YACzCrC,KAAKsN,aAAa9I,OAEXmK,IAxEA,CAAApS,IAAA,mBAAAgB,MAAA,WA6EHyC,KAAKuN,cACLvN,KAAKuN,aAAajB,OAEtBtM,KAAKuN,aAAevN,KAAKoC,MAAMmC,MAAMlC,IAAIrC,KAAK4I,SAASiG,sBACvD7O,KAAKuN,aAAa/I,OACdxE,KAAK8O,kBAAoB9O,KAAK8O,iBAAiBC,iBAAmB/O,MAClEA,KAAKuN,aAAayB,UAnFf,CAAAzS,IAAA,eAAAgB,MAAA,WAwFPyC,KAAKiP,qBAxFE,CAAA1S,IAAA,eAAAgB,MAAA,WA4FPyC,KAAKkP,uBA5FE,CAAA3S,IAAA,mBAAAgB,MAAA,SA+Fc1B,GACrBA,EAAOsT,OAAStT,EAAOuT,OAAS,EAChCpP,KAAKoC,MAAMqK,OAAOpK,IAAI,CAClBqK,QAAS7Q,EACTsT,OAAU,GACVC,OAAU,GACVzC,SAAU,IACV0C,MAAM,MAtGH,CAAA9S,IAAA,sBAAAgB,MAAA,WA4Ge,IAAA+R,EAAAtP,KACtB4D,kBAAkB,WAElB,IAAI2L,EAAgC,WAC5BD,EAAK9B,OACL8B,EAAK9B,MAAMlB,OAEfgD,EAAK9B,MAAQ8B,EAAKlN,MAAMmC,MAAMlC,IAAI,0BAClCiN,EAAK9B,MAAMhJ,QAGfxE,KAAKwP,gBAAkB,IAAI1G,EAAA2G,gBAAgBzP,KAAKoC,OAAO,SAACvG,GACpDyT,EAAK3B,iBAAiB9R,GACtByT,EAAK5L,OAAO4L,EAAKE,iBACjBF,EAAKI,eAEDJ,EAAK9B,OACL8B,EAAK9B,MAAMlB,UAEjB,SAACzQ,GACCyT,EAAK3B,iBAAiB9R,GACtB0T,OAEJvP,KAAKqC,IAAIrC,KAAKwP,iBACdD,MApIO,CAAAhT,IAAA,qBAAAgB,MAAA,WAwIc,IAAAoS,EAAA3P,KACrB4D,kBAAkB,WAElB5D,KAAK4P,cAEL5P,KAAK8O,iBAAmB,IAAIhG,EAAAW,iBAAiBzJ,KAAKoC,OAAO,WACrDuN,EAAKjM,OAAOiM,EAAKb,kBACjBa,EAAK/B,kBACL+B,EAAK1G,yBACP,WACE0G,EAAKjM,OAAOiM,EAAKb,kBACjBa,EAAKE,gBACLjM,kBAAkB,mBAEtB5D,KAAKqC,IAAIrC,KAAK8O,oBAtJP,CAAAvS,IAAA,kBAAAgB,MAAA,SAmMYuS,GACnB,GAAIA,EAAS,CAAA,IAAAC,EAAAC,EAAApT,2BACMoD,KAAKiQ,UADX,IACT,IAAAD,EAAA5S,MAAA2S,EAAAC,EAAA3S,KAAAC,MAA8B,CAAAyS,EAAAxS,MACxB,GAAO6M,eAAe,CAACE,OAAQ,aAF5B,MAAA1M,GAAAoS,EAAAxS,EAAAI,GAAA,QAAAoS,EAAAtS,SAIN,CAAA,IAAAwS,EAAAC,EAAAvT,2BACYoD,KAAKiQ,UADjB,IACH,IAAAE,EAAA/S,MAAA8S,EAAAC,EAAA9S,KAAAC,MAA8B,CAAA4S,EAAA3S,MACxB,GAAO6S,sBAFV,MAAAxS,GAAAuS,EAAA3S,EAAAI,GAAA,QAAAuS,EAAAzS,QAxMA,CAAAnB,IAAA,cAAAgB,MAAA,WAgNHyC,KAAKqN,eAAerN,KAAKqN,cAAcf,OACvCtM,KAAKsN,cAActN,KAAKsN,aAAahB,OACrCtM,KAAKuN,cAAcvN,KAAKuN,aAAayB,QACrChP,KAAKoN,SAASpN,KAAKoN,QAAQ4B,UAnNxB,CAAAzS,IAAA,gBAAAgB,MAAA,WAuNHyC,KAAKuN,cAAcvN,KAAKuN,aAAa8C,SACrCrQ,KAAKoN,SAASpN,KAAKoN,QAAQiD,WAxNxB,CAAA9T,IAAA,kBAAAgB,MAAA,WA4NPyC,KAAK6N,iBAAgB,GACrB7N,KAAK0D,OAAO1D,KAAKsO,mBACjBjL,6BA9NO0F,EAAA,GAIFD,EAAAC,eAAcA,EAJlB,CAAAjI,EAAAgI,SAAAhI,EAAAgI,OAAM,KAAnB,CAAUhI,KAAAA,GAAE,KCAZ,SAAUA,IAAG,SAAAgI,GAAM,IACF2G,EADE,SAAAa,GAAAtR,UAAAyQ,EACsBxO,OAAO0I,YAAYC,WADzC,IAAA2G,EAAA/Q,aAAAiQ,GASX,SAAAA,EAAYrN,EAAqBoO,EAA4BC,GAAyB,IAAAC,EAAA,OAAA5R,gBAAAkB,KAAAyP,IAClFiB,EAAAH,EAAAjS,KAAA0B,KAAMoC,IAEDuO,iBAAmB,IAAI1P,OAAO0I,YAAYO,MAAMwG,EAAKtO,OAAO,KAAO,GAAM,2CAC9EsO,EAAKC,iBAAiBxG,UAAU,EAAG,GACnCuG,EAAKC,iBAAiBvG,iBAEtBsG,EAAKE,sBAAwB,IAAI3P,OAAO0I,YAAYO,MAAMwG,EAAKtO,MAAO,IAAK,IAAK,WAEhFsO,EAAKG,SAAW,IAAI5P,OAAO0I,YAAYO,MAAMwG,EAAKtO,MAAOvB,KAAKe,MAAMJ,MAAQ,EAAG,IAAU,YACzFkP,EAAKG,SAASzG,eAAe,CAACE,OAAQ,YACtCoG,EAAKG,SAAStG,KAAK,YAAaiG,GAChC/L,wBAAwBiM,EAAKG,SAAU,WAAY,YAEnDH,EAAKI,SAAWJ,EAAKtO,MAAMC,IAAIoJ,KAAK5K,KAAKe,MAAMJ,MAAQ,EAAGX,KAAKe,MAAMF,OAAS,EAAG,kBAAmB,CAChGgK,WAAc,iBACdC,SAAY,GACZC,MAAS,UACTC,MAAS,SACTC,OAAU,UACVC,gBAAmB,IAEvB2E,EAAKI,SAAS3G,UAAU,GAAK,IAE7BuG,EAAKK,qBAAuB,IAAI9P,OAAO0I,YAAYO,MAAMwG,EAAKtO,MAAO,IAAW,IAAU,SAC1FsO,EAAKK,qBAAqB3G,eAAe,CAACE,OAAQ,YAClDoG,EAAKK,qBAAqB1M,GAAG,YAAaoM,GAC1ChM,wBAAwBiM,EAAKK,qBAAsB,QAAQ,sBAE3DL,EAAKrO,IAAIqO,EAAKC,kBACdD,EAAKrO,IAAIqO,EAAKE,uBACdF,EAAKrO,IAAIqO,EAAKI,UACdJ,EAAKrO,IAAIqO,EAAKG,UACdH,EAAKrO,IAAIqO,EAAKK,sBAjCoEL,EAT3E,OAAAjB,EAAA,GACF3G,EAAA2G,gBAAeA,EADnB,CAAA3O,EAAAgI,SAAAhI,EAAAgI,OAAM,KAAnB,CAAUhI,KAAAA,GAAE,KTAZ,SAAUA,IAAG,SAAAgI,GAAM,IACFmF,EADE,SAAA+C,GAAAhS,UAAAiP,EACqBhN,OAAO0I,YAAYC,WADxC,IAAAqH,EAAAzR,aAAAyO,GAWX,SAAAA,EAAY7L,EAAqBwI,EAAuBC,GAAuB,IAAAqG,EAAApS,gBAAAkB,KAAAiO,IAC3EiD,EAAAD,EAAA3S,KAAA0B,KAAMoC,IA6DF4I,MAAQ,KA3DZkG,EAAKjG,aAAa,KAAM,IAExBiG,EAAKC,IAAM,IAAIlQ,OAAO0I,YAAYO,MAAMgH,EAAK9O,MAAO,EAAG,EAAG,kBAC1D8O,EAAKC,IAAIhH,UAAU,EAAG,GACtB+G,EAAKC,IAAI/G,iBACT8G,EAAKE,MAAQ,IAAInQ,OAAO0I,YAAYO,MAAMgH,EAAK9O,MAAO,IAAK,IAAK,cAChE8O,EAAK9F,SAAW,IAAInK,OAAO0I,YAAYO,MAAMgH,EAAK9O,MAAO,IAAK,IAAK,YACnE8O,EAAK7F,WAAa,IAAIpK,OAAO0I,YAAYO,MAAMgH,EAAK9O,MAAO,IAAK,IAAK,cAErE8O,EAAK1F,cAAgB0F,EAAK9O,MAAMC,IAAIoJ,KAAK,IAAK,IAAK,GAAI,CACnDC,WAAc,iBACdC,SAAY,GACZC,MAAS,UACTC,MAAS,SACTC,OAAU,UACVC,gBAAmB,IAEvBmF,EAAK1F,cAAcrB,UAAU,GAAK,IAElC,IAAI6B,EAAMkF,EAAK1F,cAAcS,QAAQC,qBAAqB,EAAG,EAAG,EAAGgF,EAAK1F,cAAc9J,QAtBX,OAuB3EsK,EAAIG,aAAa,EAAG,WACpBH,EAAIG,aAAa,EAAG,WACpB+E,EAAK1F,cAAcY,QAAQJ,GAE3BkF,EAAK7E,aAAe6E,EAAK9O,MAAMC,IAAIoJ,KAAK,IAAK,IAAK,GAAI,CAClDC,WAAc,iBACdC,SAAY,GACZC,MAAS,UACTC,MAAS,WAEbqF,EAAK7E,aAAalC,UAAU,GAAK,IAEjC+G,EAAK7O,IAAI,CACL6O,EAAKC,IACLD,EAAKE,MACLF,EAAK9F,SACL8F,EAAK7F,WACL6F,EAAK1F,cACL0F,EAAK7E,eAGT6E,EAAK9F,SAAShB,eAAe,CAACE,OAAQ,YACtC4G,EAAK9F,SAAS/G,GAAG,aAAa,WAC1BuG,EAAOsG,EAAK9F,aAKhB3G,wBAAwByM,EAAK9F,SAAU,WAAY,YACnD8F,EAAK7F,WAAWjB,eAAe,CAACE,OAAQ,YACxC4G,EAAK7F,WAAWd,KAAK,aAAa,WAC9BM,EAASqG,EAAK7F,YACV6F,EAAKlG,OACLkG,EAAKlG,MAAMsB,UAGnB7H,wBAAwByM,EAAK7F,WAAY,aAAc,cA3DoB6F,EAXpE,OAAA1U,aAAAyR,EAAA,CAAA,CAAA1R,IAAA,OAAAgB,MAAA,SA0ECgP,EAAcC,GACtBxM,KAAKoR,MAAMxP,MAAQ,KACnB5B,KAAKoC,MAAMqK,OAAOpK,IAAI,CAClBqK,QAAS1M,KAAKoR,MACdxP,MAAS,EACT+K,SAAU,IACVC,KAAM3L,OAAO+E,KAAK6G,OAAOC,KAAKC,MAGlC/M,KAAKwL,cAAcC,KAAOuB,OAAOT,GACjCvM,KAAKqM,aAAaZ,KAAOuB,OAAOR,GAEhCxM,KAAKgL,MAAQhL,KAAKoC,MAAMmC,MAAMlC,IAAI,oBAClCrC,KAAKgL,MAAMxG,WAvFJyJ,EAAA,GACFnF,EAAAmF,eAAcA,EADlB,CAAAnN,EAAAgI,SAAAhI,EAAAgI,OAAM,KAAnB,CAAUhI,KAAAA,GAAE","file":"main.js","sourcesContent":["var sh;\n(function (sh) {\n    class App extends Phaser.Game {\n        constructor() {\n            let config = {\n                type: Phaser.AUTO,\n                width: App.CANVAS_WIDTH,\n                height: App.CANVAS_HEIGHT,\n                scale: {\n                    mode: FitScaleManager.detectBestScaleMode(),\n                    autoCenter: Phaser.Scale.CENTER_BOTH\n                },\n                transparent: true,\n                scene: {\n                    create: () => {\n                        this.scene.add('Boot', sh.scene.Boot, true);\n                    }\n                }\n            };\n            super(config);\n        }\n    }\n    App.CANVAS_WIDTH = 980;\n    App.CANVAS_HEIGHT = 600;\n    sh.App = App;\n})(sh || (sh = {}));\nlet game;\nwindow.onload = () => {\n    game = new sh.App();\n};\nlet delayedCalls = [];\nfunction delayedCall(delay, callback, args, callbackScope) {\n    let scene = game.scene.getAt(0);\n    if (scene) {\n        let dc = scene.time.delayedCall(delay, callback, args, callbackScope);\n        delayedCalls.push(dc);\n        return dc;\n    }\n    let t = setTimeout(callback, delay);\n    delayedCalls.push(t);\n    return t;\n}\nfunction destroyAllDelayedCalls() {\n    for (let dc of delayedCalls) {\n        if (dc instanceof Phaser.Time.TimerEvent) {\n            dc.remove(false);\n        }\n        else {\n            clearTimeout(dc);\n        }\n    }\n    delayedCalls = [];\n}\nfunction setPageBackground(bg) {\n    document.querySelector(\"html\").style.backgroundImage = \"url(assets/imgs/\" + bg + \".jpg)\";\n}\nfunction setupButton(btn, frame) {\n    btn.on('pointerdown', () => { btn.setFrame(frame + '_hover' + '0000'); });\n    btn.on('pointerover', () => { btn.setFrame(frame + '_hover' + '0000'); game.scene.getAt(0).sound.add(\"button hover\").play(); });\n    btn.on('pointerout', () => { btn.setFrame(frame + '0000'); });\n    btn.on('pointerup', () => { btn.setFrame(frame + '0000'); game.scene.getAt(0).sound.add('activity selection - button selection').play(); });\n}\nfunction setupButtonTextureBased(btn, texture, hoverTexture) {\n    btn.on('pointerdown', () => { btn.setTexture(hoverTexture); });\n    btn.on('pointerover', () => { btn.setTexture(hoverTexture); game.scene.getAt(0).sound.add(\"button hover\").play(); });\n    btn.on('pointerout', () => { btn.setTexture(texture); });\n    btn.on('pointerup', () => { btn.setTexture(texture); game.scene.getAt(0).sound.add('activity selection - button selection').play(); });\n}\n/**\n * @author Roman Parada\n * This class is created to fix overlapping of bottom part of canvas by navigation bar in iOS.\n * It make a delayed resize of the canvas (like Phaser-3 FIT methods does) and it overrides Phaser-3 input window to Phaser-3 core transform methods\n *\n * How to use:\n * Just call the code line below in Boot scene's init() method of your project:\n * new FitScaleManager(this.game).setup();\n */\nclass FitScaleManager {\n    constructor(game) {\n        this.doResize = () => {\n            let scale = this.calculateScale();\n            let newCanvasWidth = this.phaserScaleManager.width * scale;\n            let newCanvasHeight = this.phaserScaleManager.height * scale;\n            this.canvasStyle.width = newCanvasWidth + 'px';\n            this.canvasStyle.height = newCanvasHeight + 'px';\n            this.canvasStyle.marginLeft = (window.innerWidth - newCanvasWidth) / 2 + 'px';\n            this.canvasStyle.marginTop = (window.innerHeight - newCanvasHeight) / 2 + 'px';\n        };\n        this.game = game;\n        this.canvasStyle = this.game.canvas.style;\n        this.phaserScaleManager = this.game.scale;\n    }\n    static detectBestScaleMode() {\n        let iOS = /iPad|iPhone|iPod/.test(navigator.platform || \"\");\n        let isAndroid = window.navigator.userAgent.toLowerCase().indexOf(\"android\") > -1;\n        return iOS || isAndroid ? Phaser.Scale.FIT : Phaser.Scale.NONE;\n    }\n    ;\n    /**\n     * Just call this method once in Boot scene's init() method\n     */\n    setup() {\n        this.phaserScaleManager.addListener(Phaser.Scale.Events.RESIZE, this.onResize, this);\n        this.overridePhaserTransformMethods();\n        this.onResize();\n    }\n    calculateScale() {\n        if (game.scale.scaleMode == Phaser.Scale.NONE)\n            return 1;\n        return Math.min(window.innerWidth / this.phaserScaleManager.width, window.innerHeight / this.phaserScaleManager.height);\n    }\n    overridePhaserTransformMethods() {\n        this.game.scale.transformX = (pageX) => {\n            return (pageX - parseInt(this.canvasStyle.marginLeft.split(\"px\")[0])) / this.calculateScale();\n        };\n        this.game.scale.transformY = (pageY) => {\n            return (pageY - parseInt(this.canvasStyle.marginTop.split(\"px\")[0])) / this.calculateScale();\n        };\n    }\n    onResize() {\n        setTimeout(this.doResize, FitScaleManager.RESIZE_DELAY);\n    }\n}\nFitScaleManager.RESIZE_DELAY = 500;\nvar sh;\n(function (sh) {\n    var core;\n    (function (core) {\n        class Gameplay {\n            constructor() {\n                this.allLettersNames = [\"ذ\", \"ط\", \"ص\", \"ح\"];\n                this.currentRound = 0;\n                this.currentLetter = 0;\n                this.correctAnswersCount = 0;\n                this.wrongAnswersCount = 0;\n                this.reset();\n                let json = game.cache.json.get('gameplay');\n                this.letters = json[\"letters\"];\n            }\n            setupCallbacks(onComplete, onLose) {\n                this.onComplete = onComplete;\n                this.onLose = onLose;\n            }\n            onLetterChosen() {\n                if (this.isNewRound()) {\n                    this.currentRound++;\n                    if (this.currentRound >= 3) {\n                        this.onComplete(this.correctAnswersCount, this.correctAnswersCount);\n                        return true;\n                    }\n                    else {\n                        this.nextLetter();\n                    }\n                }\n                return false;\n            }\n            nextLetter() {\n                if (this.currentLetter == this.letters.length - 1) {\n                    this.currentLetter = 0;\n                }\n                else {\n                    this.currentLetter++;\n                }\n                // this.correctAnswersCount = 0;\n                // this.wrongAnswersCount = 0;\n            }\n            getCorrectLetterName() {\n                return this.letters[this.currentLetter]['correctLetterName'];\n            }\n            getCorrectAudioKey() {\n                return this.letters[this.currentLetter]['correctAudioKey'];\n            }\n            onCorrectAnswer() {\n                this.correctAnswersCount++;\n                return this.onLetterChosen();\n            }\n            onWrongAnswer() {\n                this.wrongAnswersCount++;\n                if (this.wrongAnswersCount >= 4) {\n                    this.onLose(this.correctAnswersCount, this.correctAnswersCount);\n                    return true;\n                }\n                else {\n                    this.onLetterChosen();\n                }\n                return false;\n            }\n            getCurrentTotalAnswersCount() {\n                return this.correctAnswersCount + this.wrongAnswersCount;\n            }\n            isNewRound() {\n                return this.getCurrentTotalAnswersCount() % 5 == 0;\n            }\n            isRoundsComplete() {\n                return this.getCurrentTotalAnswersCount() / 5 >= 3;\n            }\n            reset() {\n                this.currentRound = 0;\n                this.currentLetter = 0;\n                this.correctAnswersCount = 0;\n                this.wrongAnswersCount = 0;\n            }\n        }\n        core.Gameplay = Gameplay;\n    })(core = sh.core || (sh.core = {}));\n})(sh || (sh = {}));\nvar sh;\n(function (sh) {\n    var scene;\n    (function (scene) {\n        class Boot extends Phaser.Scene {\n            init() {\n                new FitScaleManager(this.game).setup();\n            }\n            create() {\n                game.scene.remove('Boot');\n                game.scene.add('Preloader', sh.scene.Preloader, true);\n            }\n        }\n        scene.Boot = Boot;\n    })(scene = sh.scene || (sh.scene = {}));\n})(sh || (sh = {}));\nvar sh;\n(function (sh) {\n    var scene;\n    (function (scene) {\n        var Gameplay = sh.core.Gameplay;\n        class MainScene extends Phaser.Scene {\n            create() {\n                this.gameplay = new Gameplay();\n                this.gameplayScreen = new sh.screen.GameplayScreen(this, this.gameplay);\n                this.children.add(this.gameplayScreen);\n                this.gameplayScreen.showInstructionPage();\n            }\n        }\n        scene.MainScene = MainScene;\n    })(scene = sh.scene || (sh.scene = {}));\n})(sh || (sh = {}));\nvar sh;\n(function (sh) {\n    var scene;\n    (function (scene) {\n        class Preloader extends Phaser.Scene {\n            preload() {\n            }\n            create() {\n                this.load.json('gameplay', 'assets/json/gameplay.json');\n                this.load.pack('preloader', 'assets/pack.json');\n                this.load.on('progress', (value) => {\n                }, this);\n                this.load.on('complete', () => {\n                    this.nextScene();\n                });\n                this.load.start();\n            }\n            nextScene() {\n                game.scene.remove('Preloader');\n                game.scene.add('ScreenMain', sh.scene.MainScene, true);\n            }\n        }\n        scene.Preloader = Preloader;\n    })(scene = sh.scene || (sh.scene = {}));\n})(sh || (sh = {}));\nvar sh;\n(function (sh) {\n    var screen;\n    (function (screen) {\n        class AreYouSureWindow extends Phaser.GameObjects.Container {\n            constructor(scene, onYes, onNo) {\n                super(scene);\n                this._areYouSurePage = new Phaser.GameObjects.Image(this.scene, -105, 0 - 48, 'Exit warning');\n                this._areYouSurePage.setOrigin(0, 0);\n                this._areYouSurePage.setInteractive();\n                this._btnSureYes = new Phaser.GameObjects.Image(this.scene, game.scale.width / 2 - 95, 485 - 50, 'btnYES1');\n                this._btnSureYes.setInteractive({ cursor: 'pointer' });\n                this._btnSureYes.once('pointerup', onYes);\n                setupButtonTextureBased(this._btnSureYes, 'btnYES1', 'btnYES2');\n                this._btnSureNo = new Phaser.GameObjects.Image(this.scene, game.scale.width / 2 + 95, 485 - 50, 'btnNO1');\n                this._btnSureNo.setInteractive({ cursor: 'pointer' });\n                this._btnSureNo.once('pointerup', onNo);\n                setupButtonTextureBased(this._btnSureNo, 'btnNO1', 'btnNO2');\n                this.add(this._areYouSurePage);\n                this.add(this._btnSureYes);\n                this.add(this._btnSureNo);\n            }\n        }\n        screen.AreYouSureWindow = AreYouSureWindow;\n    })(screen = sh.screen || (sh.screen = {}));\n})(sh || (sh = {}));\nvar sh;\n(function (sh) {\n    var screen;\n    (function (screen) {\n        class CompleteWindow extends Phaser.GameObjects.Container {\n            constructor(scene, onBack, onReplay, onNext) {\n                super(scene);\n                this.music = null;\n                this.setPosition(-104.5, -48);\n                this._bgComplete = new Phaser.GameObjects.Image(this.scene, 0, 0, 'Completion page LATEST UPDATED');\n                this._bgComplete.setOrigin(0, 0);\n                this._bgComplete.setInteractive();\n                this._cup = new Phaser.GameObjects.Image(this.scene, 400, 410, 'Trophy');\n                this._btnBack = new Phaser.GameObjects.Image(this.scene, 570, 570, 'btnBACK1');\n                this._btnReplay = new Phaser.GameObjects.Image(this.scene, 720, 570, 'btnReplay1');\n                this._btnNext = new Phaser.GameObjects.Image(this.scene, 870, 570, 'btnNEXT1');\n                let _CollectedPoints = new Phaser.GameObjects.Image(this.scene, 620, 440, 'Collected Points');\n                this.totalScoreTxt = this.scene.add.text(845, 352, \"\", {\n                    \"fontFamily\": \"Kids Rock Demo\",\n                    \"fontSize\": 35,\n                    \"color\": \"#F49F1C\",\n                    \"align\": 'center',\n                    'stroke': '#70451A',\n                    'strokeThickness': 6\n                });\n                this.totalScoreTxt.setOrigin(0.5, 0.5);\n                let grd = this.totalScoreTxt.context.createLinearGradient(0, 0, 0, this.totalScoreTxt.height);\n                grd.addColorStop(0, '#FFFF00');\n                grd.addColorStop(1, '#C17316');\n                this.totalScoreTxt.setFill(grd);\n                this.starScoreTxt = this.scene.add.text(648, 433, \"\", {\n                    \"fontFamily\": \"Kids Rock Demo\",\n                    \"fontSize\": 24,\n                    \"color\": \"#FFFFFF\",\n                    \"align\": 'center'\n                });\n                this.starScoreTxt.setOrigin(0.5, 0.5);\n                this.add([\n                    this._bgComplete,\n                    _CollectedPoints,\n                    this._cup,\n                    this._btnBack,\n                    this._btnReplay,\n                    this._btnNext,\n                    this.totalScoreTxt,\n                    this.starScoreTxt\n                ]);\n                this._btnBack.setInteractive({ cursor: 'pointer' });\n                this._btnBack.on('pointerup', () => {\n                    onBack(this._btnBack);\n                    // if (this.music) {\n                    //     this.music.stop();\n                    // }\n                });\n                setupButtonTextureBased(this._btnBack, 'btnBACK1', 'btnBACK2');\n                this._btnReplay.setInteractive({ cursor: 'pointer' });\n                this._btnReplay.once('pointerup', () => {\n                    onReplay(this._btnReplay);\n                    if (this.music) {\n                        this.music.stop();\n                    }\n                });\n                setupButtonTextureBased(this._btnReplay, 'btnReplay1', 'btnReplay2');\n                this._btnNext.setInteractive({ cursor: 'pointer' });\n                this._btnNext.on('pointerup', () => {\n                    onNext(this._btnNext);\n                    // if (this.music) {\n                    //     this.music.stop();\n                    // }\n                });\n                setupButtonTextureBased(this._btnNext, 'btnNEXT1', 'btnNEXT2');\n            }\n            show(score, starScore) {\n                this._cup.scale = 1.25;\n                this.scene.tweens.add({\n                    targets: this._cup,\n                    \"scale\": 1,\n                    duration: 500,\n                    ease: Phaser.Math.Easing.Back.Out\n                });\n                this.totalScoreTxt.text = String(score);\n                this.starScoreTxt.text = String(starScore);\n                // let music = this.scene.sound.add(\"viktory\");\n                this.music = this.scene.sound.add(\"Activity completion fantastic\");\n                this.music.play();\n            }\n        }\n        screen.CompleteWindow = CompleteWindow;\n    })(screen = sh.screen || (sh.screen = {}));\n})(sh || (sh = {}));\nvar sh;\n(function (sh) {\n    var screen;\n    (function (screen) {\n        class GameplayScreen extends Phaser.GameObjects.Container {\n            constructor(scene, gameplay) {\n                super(scene);\n                this.bgMusic = null;\n                this.soundGooseYes = null;\n                this.soundGooseNo = null;\n                this.correctAudio = null;\n                this.wfsnd = null;\n                this.showCompleteWindow = (score, starScore) => {\n                    let completeWindow = new screen.CompleteWindow(this.scene, (target) => {\n                        this.playBtnClickAnim(target);\n                    }, (target) => {\n                        this.playBtnClickAnim(target);\n                        this.destroyGameplay();\n                        this.remove(completeWindow);\n                        this.showInstructionPage();\n                    }, (target) => {\n                        this.playBtnClickAnim(target);\n                    });\n                    this.setInputEnabled(false);\n                    delayedCall(750, () => {\n                        setPageBackground(\"bg-blue\");\n                        this.add(completeWindow);\n                        completeWindow.show(score, starScore);\n                        this.bgMusic.stop();\n                    });\n                };\n                this.showLoseWindow = (score, starScore) => {\n                    let tryAgainWindow = new screen.TryAgainWindow(this.scene, (target) => {\n                        this.playBtnClickAnim(target);\n                    }, (target) => {\n                        this.playBtnClickAnim(target);\n                        this.destroyGameplay();\n                        this.remove(tryAgainWindow);\n                        this.showInstructionPage();\n                    });\n                    this.setInputEnabled(false);\n                    delayedCall(750, () => {\n                        setPageBackground(\"bg-blue\");\n                        this.add(tryAgainWindow);\n                        tryAgainWindow.show(score, starScore);\n                        this.bgMusic.stop();\n                    });\n                };\n                this.gameplay = gameplay;\n            }\n            showGameplay() {\n                setPageBackground(\"bg-australia\");\n                this.bgMusic = this.scene.sound.add(\"bg_sound\");\n                this.bgMusic.play();\n                this.bgMusic.loop = true;\n                this.gameplay.reset();\n                this._gameStage = new Phaser.GameObjects.Image(this.scene, game.scale.width / 2, game.scale.height / 2, null);\n                this._gameStage.setOrigin(0.488, 0.476);\n                this._gameStage.setInteractive();\n                this._btnSound = new Phaser.GameObjects.Image(this.scene, 160 - 105, 100 - 50, 'Sound');\n                this._btnSound.setInteractive({ cursor: 'pointer' });\n                setupButtonTextureBased(this._btnSound, 'Sound', 'Sound HOVER EFFECT');\n                this._btnClose = new Phaser.GameObjects.Image(this.scene, 1025 - 105, 100 - 50, 'x Button');\n                this._btnClose.setInteractive({ cursor: 'pointer' });\n                setupButtonTextureBased(this._btnClose, 'x Button', 'x Button HOVER EFFECT');\n                this.gameplayContainer = new Phaser.GameObjects.Container(this.scene);\n                this.addAt(this.gameplayContainer, 0);\n                this.gameplayContainer.add([\n                    this._gameStage,\n                    this._btnSound,\n                    this._btnClose\n                ]);\n                // this.createInput();\n                this.gameplay.setupCallbacks(this.showCompleteWindow, this.showLoseWindow);\n            }\n            onCorrectAnswer() {\n                let completed = this.gameplay.onCorrectAnswer();\n                this.soundGooseYes = this.scene.sound.add(\"Goose Yes\");\n                this.soundGooseYes.play();\n                return completed;\n            }\n            onWrongAnswer() {\n                let lost = this.gameplay.onWrongAnswer();\n                this.soundGooseNo = this.scene.sound.add(\"Goose no\");\n                this.soundGooseNo.play();\n                return lost;\n            }\n            playCorrectAudio() {\n                if (this.correctAudio) {\n                    this.correctAudio.stop();\n                }\n                this.correctAudio = this.scene.sound.add(this.gameplay.getCorrectAudioKey());\n                this.correctAudio.play();\n                if (this.areYouSureWindow && this.areYouSureWindow.parentContainer == this) {\n                    this.correctAudio.pause();\n                }\n            }\n            onSoundClick() {\n                this.playCorrectAudio();\n            }\n            onCloseClick() {\n                this.showAreYouSurePage();\n            }\n            playBtnClickAnim(target) {\n                target.scaleX = target.scaleY = 1;\n                this.scene.tweens.add({\n                    targets: target,\n                    \"scaleX\": 0.9,\n                    \"scaleY\": 0.9,\n                    duration: 100,\n                    yoyo: true\n                });\n            }\n            showInstructionPage() {\n                setPageBackground(\"bg-blue\");\n                let playInstructionSound = () => {\n                    if (this.wfsnd) {\n                        this.wfsnd.stop();\n                    }\n                    this.wfsnd = this.scene.sound.add(\"Welcome Find the sound\");\n                    this.wfsnd.play();\n                };\n                this.instructionPage = new screen.InstructionPage(this.scene, (target) => {\n                    this.playBtnClickAnim(target);\n                    this.remove(this.instructionPage);\n                    this.showGameplay();\n                    if (this.wfsnd) {\n                        this.wfsnd.stop();\n                    }\n                }, (target) => {\n                    this.playBtnClickAnim(target);\n                    playInstructionSound();\n                });\n                this.add(this.instructionPage);\n                playInstructionSound();\n            }\n            showAreYouSurePage() {\n                setPageBackground(\"bg-blue\");\n                this.pauseSounds();\n                this.areYouSureWindow = new screen.AreYouSureWindow(this.scene, () => {\n                    this.remove(this.areYouSureWindow);\n                    this.destroyGameplay();\n                    this.showInstructionPage();\n                }, () => {\n                    this.remove(this.areYouSureWindow);\n                    this.unpauseSounds();\n                    setPageBackground(\"bg-australia\");\n                });\n                this.add(this.areYouSureWindow);\n            }\n            setInputEnabled(enabled) {\n                if (enabled) {\n                    for (let hc of this.hexagons) {\n                        hc[\"bg\"].setInteractive({ cursor: 'pointer' });\n                    }\n                }\n                else {\n                    for (let hc of this.hexagons) {\n                        hc[\"bg\"].disableInteractive();\n                    }\n                }\n            }\n            pauseSounds() {\n                if (this.soundGooseYes)\n                    this.soundGooseYes.stop();\n                if (this.soundGooseNo)\n                    this.soundGooseNo.stop();\n                if (this.correctAudio)\n                    this.correctAudio.pause();\n                if (this.bgMusic)\n                    this.bgMusic.pause();\n            }\n            unpauseSounds() {\n                if (this.correctAudio)\n                    this.correctAudio.resume();\n                if (this.bgMusic)\n                    this.bgMusic.resume();\n            }\n            destroyGameplay() {\n                this.setInputEnabled(false);\n                this.remove(this.gameplayContainer);\n                destroyAllDelayedCalls();\n            }\n        }\n        screen.GameplayScreen = GameplayScreen;\n    })(screen = sh.screen || (sh.screen = {}));\n})(sh || (sh = {}));\nvar sh;\n(function (sh) {\n    var screen;\n    (function (screen) {\n        class InstructionPage extends Phaser.GameObjects.Container {\n            constructor(scene, onPlayClick, onSndClick) {\n                super(scene);\n                this._instructionPage = new Phaser.GameObjects.Image(this.scene, 0 - 105, 0 - 48, 'Instructions page  ALL ACTIVITY  TITLEs');\n                this._instructionPage.setOrigin(0, 0);\n                this._instructionPage.setInteractive();\n                this._instructionPageTitle = new Phaser.GameObjects.Image(this.scene, 495, 105, 'welcome');\n                this._btnPlay = new Phaser.GameObjects.Image(this.scene, game.scale.width / 2, 480 - 50, 'btnPLAY1');\n                this._btnPlay.setInteractive({ cursor: 'pointer' });\n                this._btnPlay.once('pointerup', onPlayClick);\n                setupButtonTextureBased(this._btnPlay, 'btnPLAY1', 'btnPLAY2');\n                this.instrTxt = this.scene.add.text(game.scale.width / 2, game.scale.height / 2, \"Find the sound.\", {\n                    \"fontFamily\": \"Kids Rock Demo\",\n                    \"fontSize\": 37,\n                    \"color\": \"#A25122\",\n                    \"align\": 'center',\n                    'stroke': '#FFFFFF',\n                    'strokeThickness': 6,\n                });\n                this.instrTxt.setOrigin(0.5, 0.5);\n                this._btnSoundInstruction = new Phaser.GameObjects.Image(this.scene, 800 - 105, 156 - 50, 'Sound');\n                this._btnSoundInstruction.setInteractive({ cursor: 'pointer' });\n                this._btnSoundInstruction.on('pointerup', onSndClick);\n                setupButtonTextureBased(this._btnSoundInstruction, 'Sound', 'Sound HOVER EFFECT');\n                this.add(this._instructionPage);\n                this.add(this._instructionPageTitle);\n                this.add(this.instrTxt);\n                this.add(this._btnPlay);\n                this.add(this._btnSoundInstruction);\n            }\n        }\n        screen.InstructionPage = InstructionPage;\n    })(screen = sh.screen || (sh.screen = {}));\n})(sh || (sh = {}));\nvar sh;\n(function (sh) {\n    var screen;\n    (function (screen) {\n        class TryAgainWindow extends Phaser.GameObjects.Container {\n            constructor(scene, onBack, onReplay) {\n                super(scene);\n                this.music = null;\n                this.setPosition(-106, -48);\n                this._bg = new Phaser.GameObjects.Image(this.scene, 0, 0, 'Try again page');\n                this._bg.setOrigin(0, 0);\n                this._bg.setInteractive();\n                this._star = new Phaser.GameObjects.Image(this.scene, 400, 415, 'Break Star');\n                this._btnBack = new Phaser.GameObjects.Image(this.scene, 600, 580, 'btnBACK1');\n                this._btnReplay = new Phaser.GameObjects.Image(this.scene, 765, 580, 'btnReplay1');\n                this.totalScoreTxt = this.scene.add.text(830, 355, \"\", {\n                    \"fontFamily\": \"Kids Rock Demo\",\n                    \"fontSize\": 35,\n                    \"color\": \"#F49F1C\",\n                    \"align\": 'center',\n                    'stroke': '#70451A',\n                    'strokeThickness': 6\n                });\n                this.totalScoreTxt.setOrigin(0.5, 0.5);\n                let grd = this.totalScoreTxt.context.createLinearGradient(0, 0, 0, this.totalScoreTxt.height);\n                grd.addColorStop(0, '#FFFF00');\n                grd.addColorStop(1, '#C17316');\n                this.totalScoreTxt.setFill(grd);\n                this.starScoreTxt = this.scene.add.text(635, 431, \"\", {\n                    \"fontFamily\": \"Kids Rock Demo\",\n                    \"fontSize\": 24,\n                    \"color\": \"#FFFFFF\",\n                    \"align\": 'center'\n                });\n                this.starScoreTxt.setOrigin(0.5, 0.5);\n                this.add([\n                    this._bg,\n                    this._star,\n                    this._btnBack,\n                    this._btnReplay,\n                    this.totalScoreTxt,\n                    this.starScoreTxt\n                ]);\n                this._btnBack.setInteractive({ cursor: 'pointer' });\n                this._btnBack.on('pointerup', () => {\n                    onBack(this._btnBack);\n                    // if (this.music) {\n                    //     this.music.stop();\n                    // }\n                });\n                setupButtonTextureBased(this._btnBack, 'btnBACK1', 'btnBACK2');\n                this._btnReplay.setInteractive({ cursor: 'pointer' });\n                this._btnReplay.once('pointerup', () => {\n                    onReplay(this._btnReplay);\n                    if (this.music) {\n                        this.music.stop();\n                    }\n                });\n                setupButtonTextureBased(this._btnReplay, 'btnReplay1', 'btnReplay2');\n            }\n            show(score, starScore) {\n                this._star.scale = 1.25;\n                this.scene.tweens.add({\n                    targets: this._star,\n                    \"scale\": 1,\n                    duration: 500,\n                    ease: Phaser.Math.Easing.Back.Out\n                });\n                this.totalScoreTxt.text = String(score);\n                this.starScoreTxt.text = String(starScore);\n                this.music = this.scene.sound.add(\"Fail - close one\");\n                this.music.play();\n            }\n        }\n        screen.TryAgainWindow = TryAgainWindow;\n    })(screen = sh.screen || (sh.screen = {}));\n})(sh || (sh = {}));\n","namespace sh {\r\n    export class App extends Phaser.Game {\r\n\r\n        public static readonly CANVAS_WIDTH: number = 980;\r\n        public static readonly CANVAS_HEIGHT: number = 600;\r\n\r\n        constructor() {\r\n            let config: Phaser.Types.Core.GameConfig = {\r\n                type: Phaser.AUTO,\r\n                width: App.CANVAS_WIDTH,\r\n                height: App.CANVAS_HEIGHT,\r\n                scale: {\r\n                    mode: FitScaleManager.detectBestScaleMode(),\r\n                    autoCenter: Phaser.Scale.CENTER_BOTH\r\n                },\r\n                transparent: true,\r\n                scene: {\r\n                    create: () => {\r\n                        this.scene.add('Boot', sh.scene.Boot, true);\r\n                    }\r\n                }\r\n            };\r\n            super(config);\r\n        }\r\n    }\r\n}\r\n\r\nlet game: sh.App;\r\nwindow.onload = () => {\r\n    game = new sh.App();\r\n};\r\n\r\nlet delayedCalls = [];\r\nfunction delayedCall(delay: number, callback: Function, args?: any[], callbackScope?: any): Phaser.Time.TimerEvent | number {\r\n    let scene = game.scene.getAt(0);\r\n    if (scene) {\r\n        let dc = scene.time.delayedCall(delay, callback, args, callbackScope);\r\n        delayedCalls.push(dc);\r\n        return dc;\r\n    }\r\n    let t = setTimeout(callback, delay);\r\n    delayedCalls.push(t);\r\n    return t;\r\n}\r\nfunction destroyAllDelayedCalls() {\r\n    for (let dc of delayedCalls) {\r\n        if (dc instanceof Phaser.Time.TimerEvent) {\r\n            (dc as Phaser.Time.TimerEvent).remove(false);\r\n        } else {\r\n            clearTimeout(dc);\r\n        }\r\n    }\r\n    delayedCalls = [];\r\n}\r\n\r\nfunction setPageBackground(bg: string) {\r\n    document.querySelector(\"html\").style.backgroundImage = \"url(assets/imgs/\" + bg + \".jpg)\";\r\n}\r\n\r\nfunction setupButton(btn, frame) {\r\n    btn.on('pointerdown', ()=>{btn.setFrame(frame + '_hover' + '0000')});\r\n    btn.on('pointerover', ()=>{btn.setFrame(frame + '_hover' + '0000');game.scene.getAt(0).sound.add(\"button hover\").play();});\r\n    btn.on('pointerout', ()=>{btn.setFrame(frame + '0000')});\r\n    btn.on('pointerup', ()=>{btn.setFrame(frame + '0000');game.scene.getAt(0).sound.add('activity selection - button selection').play();});\r\n}\r\nfunction setupButtonTextureBased(btn:Phaser.GameObjects.Image, texture, hoverTexture) {\r\n    btn.on('pointerdown', ()=>{btn.setTexture(hoverTexture)});\r\n    btn.on('pointerover', ()=>{btn.setTexture(hoverTexture);game.scene.getAt(0).sound.add(\"button hover\").play();});\r\n    btn.on('pointerout', ()=>{btn.setTexture(texture)});\r\n    btn.on('pointerup', ()=>{btn.setTexture(texture);game.scene.getAt(0).sound.add('activity selection - button selection').play();});\r\n}","namespace sh.screen {\r\n    export class TryAgainWindow extends Phaser.GameObjects.Container {\r\n\r\n        _bg:Phaser.GameObjects.Image;\r\n        _star:Phaser.GameObjects.Image;\r\n        _btnBack:Phaser.GameObjects.Image;\r\n        _btnReplay:Phaser.GameObjects.Image;\r\n\r\n        totalScoreTxt:Phaser.GameObjects.Text;\r\n        starScoreTxt:Phaser.GameObjects.Text;\r\n\r\n        constructor(scene: Phaser.Scene, onBack:(target)=>void, onReplay:(target)=>void) {\r\n            super(scene);\r\n\r\n            this.setPosition(-106, -48);\r\n\r\n            this._bg = new Phaser.GameObjects.Image(this.scene, 0, 0, 'Try again page');\r\n            this._bg.setOrigin(0, 0);\r\n            this._bg.setInteractive();\r\n            this._star = new Phaser.GameObjects.Image(this.scene, 400, 415, 'Break Star');\r\n            this._btnBack = new Phaser.GameObjects.Image(this.scene, 600, 580, 'btnBACK1');\r\n            this._btnReplay = new Phaser.GameObjects.Image(this.scene, 765, 580, 'btnReplay1');\r\n\r\n            this.totalScoreTxt = this.scene.add.text(830, 355, \"\", {\r\n                \"fontFamily\": \"Kids Rock Demo\",\r\n                \"fontSize\": 35,\r\n                \"color\": \"#F49F1C\",\r\n                \"align\": 'center',\r\n                'stroke': '#70451A',\r\n                'strokeThickness': 6\r\n            });\r\n            this.totalScoreTxt.setOrigin(0.5, 0.5);\r\n\r\n            let grd = this.totalScoreTxt.context.createLinearGradient(0, 0, 0, this.totalScoreTxt.height);\r\n            grd.addColorStop(0, '#FFFF00');\r\n            grd.addColorStop(1, '#C17316');\r\n            this.totalScoreTxt.setFill(grd);\r\n\r\n            this.starScoreTxt = this.scene.add.text(635, 431, \"\", {\r\n                \"fontFamily\": \"Kids Rock Demo\",\r\n                \"fontSize\": 24,\r\n                \"color\": \"#FFFFFF\",\r\n                \"align\": 'center'\r\n            });\r\n            this.starScoreTxt.setOrigin(0.5, 0.5);\r\n\r\n            this.add([\r\n                this._bg,\r\n                this._star,\r\n                this._btnBack,\r\n                this._btnReplay,\r\n                this.totalScoreTxt,\r\n                this.starScoreTxt\r\n            ]);\r\n\r\n            this._btnBack.setInteractive({cursor: 'pointer'});\r\n            this._btnBack.on('pointerup', ()=>{\r\n                onBack(this._btnBack);\r\n                // if (this.music) {\r\n                //     this.music.stop();\r\n                // }\r\n            });\r\n            setupButtonTextureBased(this._btnBack, 'btnBACK1', 'btnBACK2');\r\n            this._btnReplay.setInteractive({cursor: 'pointer'});\r\n            this._btnReplay.once('pointerup', ()=>{\r\n                onReplay(this._btnReplay);\r\n                if (this.music) {\r\n                    this.music.stop();\r\n                }\r\n            });\r\n            setupButtonTextureBased(this._btnReplay, 'btnReplay1', 'btnReplay2');\r\n        }\r\n\r\n        private music = null;\r\n        public show(score:number, starScore:number):void {\r\n            this._star.scale = 1.25;\r\n            this.scene.tweens.add({\r\n                targets: this._star,\r\n                \"scale\": 1,\r\n                duration: 500,\r\n                ease: Phaser.Math.Easing.Back.Out\r\n            });\r\n\r\n            this.totalScoreTxt.text = String(score);\r\n            this.starScoreTxt.text = String(starScore);\r\n\r\n            this.music = this.scene.sound.add(\"Fail - close one\");\r\n            this.music.play();\r\n        }\r\n    }\r\n}","/**\r\n * @author Roman Parada\r\n * This class is created to fix overlapping of bottom part of canvas by navigation bar in iOS.\r\n * It make a delayed resize of the canvas (like Phaser-3 FIT methods does) and it overrides Phaser-3 input window to Phaser-3 core transform methods\r\n *\r\n * How to use:\r\n * Just call the code line below in Boot scene's init() method of your project:\r\n * new FitScaleManager(this.game).setup();\r\n */\r\nclass FitScaleManager {\r\n\r\n    public static detectBestScaleMode():integer {\r\n        let iOS = /iPad|iPhone|iPod/.test(navigator.platform || \"\");\r\n        let isAndroid = window.navigator.userAgent.toLowerCase().indexOf(\"android\") > -1;\r\n        return iOS || isAndroid ? Phaser.Scale.FIT : Phaser.Scale.NONE;\r\n    };\r\n\r\n    private static RESIZE_DELAY: number = 500;\r\n\r\n    private game: Phaser.Game;\r\n\r\n    private canvasStyle: CSSStyleDeclaration;\r\n    private phaserScaleManager: Phaser.Scale.ScaleManager;\r\n\r\n    constructor(game: Phaser.Game) {\r\n        this.game = game;\r\n\r\n        this.canvasStyle = this.game.canvas.style;\r\n        this.phaserScaleManager = this.game.scale;\r\n    }\r\n\r\n    /**\r\n     * Just call this method once in Boot scene's init() method\r\n     */\r\n    public setup(): void {\r\n        this.phaserScaleManager.addListener(Phaser.Scale.Events.RESIZE, this.onResize, this);\r\n\r\n        this.overridePhaserTransformMethods();\r\n\r\n        this.onResize();\r\n    }\r\n\r\n    private calculateScale(): number {\r\n        if (game.scale.scaleMode == Phaser.Scale.NONE) return 1;\r\n\r\n        return Math.min(\r\n            window.innerWidth / this.phaserScaleManager.width,\r\n            window.innerHeight / this.phaserScaleManager.height\r\n        );\r\n    }\r\n\r\n    private overridePhaserTransformMethods(): void {\r\n        this.game.scale.transformX = (pageX: number) => {\r\n            return (pageX - parseInt(this.canvasStyle.marginLeft.split(\"px\")[0])) / this.calculateScale();\r\n        };\r\n        this.game.scale.transformY = (pageY: number) => {\r\n            return (pageY - parseInt(this.canvasStyle.marginTop.split(\"px\")[0])) / this.calculateScale();\r\n        };\r\n    }\r\n\r\n    private onResize(): void {\r\n        setTimeout(this.doResize, FitScaleManager.RESIZE_DELAY);\r\n    }\r\n\r\n    private doResize: () => void = () => {\r\n        let scale: number = this.calculateScale();\r\n\r\n        let newCanvasWidth: number = this.phaserScaleManager.width * scale;\r\n        let newCanvasHeight: number = this.phaserScaleManager.height * scale;\r\n\r\n        this.canvasStyle.width = newCanvasWidth + 'px';\r\n        this.canvasStyle.height = newCanvasHeight + 'px';\r\n\r\n        this.canvasStyle.marginLeft = (window.innerWidth - newCanvasWidth) / 2 + 'px';\r\n        this.canvasStyle.marginTop = (window.innerHeight - newCanvasHeight) / 2 + 'px';\r\n    };\r\n}","namespace sh.core {\r\n    export class Gameplay {\r\n\r\n        public readonly allLettersNames:string[] = [\"ذ\", \"ط\", \"ص\", \"ح\"];\r\n\r\n        private currentRound:number = 0;\r\n        private currentLetter:number = 0;\r\n        private letters:object[];\r\n\r\n        private correctAnswersCount: number = 0;\r\n        private wrongAnswersCount: number = 0;\r\n\r\n        private onComplete:(score:number, starScore:number)=>void;\r\n        private onLose:(score:number, starScore:number)=>void;\r\n\r\n        constructor() {\r\n            this.reset();\r\n            let json = game.cache.json.get('gameplay');\r\n            this.letters = json[\"letters\"];\r\n        }\r\n\r\n        public setupCallbacks(onComplete:(score:number, starScore:number)=>void, onLose:(score:number, starScore:number)=>void):void {\r\n            this.onComplete = onComplete;\r\n            this.onLose = onLose;\r\n        }\r\n\r\n        public onLetterChosen():boolean {\r\n            if (this.isNewRound()) {\r\n                this.currentRound++;\r\n                if (this.currentRound >= 3) {\r\n                    this.onComplete(this.correctAnswersCount, this.correctAnswersCount);\r\n                    return true;\r\n                } else {\r\n                    this.nextLetter();\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n\r\n        public nextLetter():void {\r\n            if (this.currentLetter == this.letters.length - 1) {\r\n                this.currentLetter = 0;\r\n            } else {\r\n                this.currentLetter++;\r\n            }\r\n            // this.correctAnswersCount = 0;\r\n            // this.wrongAnswersCount = 0;\r\n        }\r\n\r\n        public getCorrectLetterName():string {\r\n            return this.letters[this.currentLetter]['correctLetterName'];\r\n        }\r\n\r\n        public getCorrectAudioKey():string {\r\n            return this.letters[this.currentLetter]['correctAudioKey'];\r\n        }\r\n\r\n        public onCorrectAnswer(): boolean {\r\n            this.correctAnswersCount++;\r\n\r\n            return this.onLetterChosen();\r\n        }\r\n\r\n        public onWrongAnswer(): boolean {\r\n            this.wrongAnswersCount++;\r\n\r\n            if (this.wrongAnswersCount >= 4) {\r\n                this.onLose(this.correctAnswersCount, this.correctAnswersCount);\r\n                return true;\r\n            } else {\r\n                this.onLetterChosen();\r\n            }\r\n            return false;\r\n        }\r\n\r\n        public getCurrentTotalAnswersCount(): number {\r\n            return this.correctAnswersCount + this.wrongAnswersCount;\r\n        }\r\n\r\n        public isNewRound():boolean {\r\n            return this.getCurrentTotalAnswersCount() % 5 == 0;\r\n        }\r\n\r\n        public isRoundsComplete():boolean {\r\n            return this.getCurrentTotalAnswersCount() / 5 >= 3;\r\n        }\r\n\r\n        public reset():void {\r\n            this.currentRound = 0;\r\n            this.currentLetter = 0;\r\n            this.correctAnswersCount = 0;\r\n            this.wrongAnswersCount = 0;\r\n        }\r\n    }\r\n}","module sh.scene {\r\n    export class Boot extends Phaser.Scene {\r\n        init() {\r\n            new FitScaleManager(this.game).setup();\r\n        }\r\n\r\n        create() {\r\n            game.scene.remove('Boot');\r\n            game.scene.add('Preloader', sh.scene.Preloader, true);\r\n        }\r\n    }\r\n}","namespace sh.scene {\r\n\r\n    import Gameplay = sh.core.Gameplay;\r\n    import GameplayScreen = sh.screen.GameplayScreen;\r\n\r\n    export class MainScene extends Phaser.Scene {\r\n\r\n        private gameplay:Gameplay;\r\n        private gameplayScreen:GameplayScreen;\r\n\r\n        public create():void {\r\n            this.gameplay = new Gameplay();\r\n\r\n            this.gameplayScreen = new sh.screen.GameplayScreen(this, this.gameplay);\r\n            this.children.add(this.gameplayScreen);\r\n            this.gameplayScreen.showInstructionPage();\r\n        }\r\n    }\r\n}","module sh.scene {\r\n\r\n    export class Preloader extends Phaser.Scene {\r\n\r\n        preload() {\r\n        }\r\n\r\n        create() {\r\n            this.load.json('gameplay', 'assets/json/gameplay.json');\r\n            this.load.pack('preloader', 'assets/pack.json');\r\n\r\n            this.load.on('progress', (value:number) => {\r\n            }, this);\r\n\r\n            this.load.on('complete', () => {\r\n                this.nextScene();\r\n            });\r\n\r\n            this.load.start();\r\n        }\r\n\r\n        private nextScene():void {\r\n            game.scene.remove('Preloader');\r\n            game.scene.add('ScreenMain', sh.scene.MainScene, true);\r\n        }\r\n    }\r\n}","namespace sh.screen {\r\n    export class AreYouSureWindow extends Phaser.GameObjects.Container {\r\n\r\n        private _areYouSurePage: Phaser.GameObjects.Image;\r\n        private _btnSureYes: Phaser.GameObjects.Image;\r\n        private _btnSureNo: Phaser.GameObjects.Image;\r\n\r\n        constructor(scene: Phaser.Scene, onYes:()=>void, onNo:()=>void) {\r\n            super(scene);\r\n\r\n            this._areYouSurePage = new Phaser.GameObjects.Image(this.scene, -105, 0-48, 'Exit warning');\r\n            this._areYouSurePage.setOrigin(0, 0);\r\n            this._areYouSurePage.setInteractive();\r\n\r\n            this._btnSureYes = new Phaser.GameObjects.Image(this.scene, game.scale.width / 2 - 95, 485-50, 'btnYES1');\r\n            this._btnSureYes.setInteractive({cursor: 'pointer'});\r\n            this._btnSureYes.once('pointerup', onYes);\r\n            setupButtonTextureBased(this._btnSureYes, 'btnYES1', 'btnYES2');\r\n\r\n            this._btnSureNo = new Phaser.GameObjects.Image(this.scene, game.scale.width / 2 + 95, 485-50, 'btnNO1');\r\n            this._btnSureNo.setInteractive({cursor: 'pointer'});\r\n            this._btnSureNo.once('pointerup', onNo);\r\n            setupButtonTextureBased(this._btnSureNo, 'btnNO1', 'btnNO2');\r\n\r\n            this.add(this._areYouSurePage);\r\n            this.add(this._btnSureYes);\r\n            this.add(this._btnSureNo);\r\n        }\r\n    }\r\n}","namespace sh.screen {\r\n    export class CompleteWindow extends Phaser.GameObjects.Container {\r\n\r\n        _bgComplete:Phaser.GameObjects.Image;\r\n        _cup:Phaser.GameObjects.Image;\r\n        _btnBack:Phaser.GameObjects.Image;\r\n        _btnReplay:Phaser.GameObjects.Image;\r\n        _btnNext:Phaser.GameObjects.Image;\r\n\r\n        totalScoreTxt:Phaser.GameObjects.Text;\r\n        starScoreTxt:Phaser.GameObjects.Text;\r\n\r\n        constructor(scene: Phaser.Scene, onBack:(target)=>void, onReplay:(target)=>void, onNext:(target)=>void) {\r\n            super(scene);\r\n\r\n            this.setPosition(-104.5, -48);\r\n\r\n            this._bgComplete = new Phaser.GameObjects.Image(this.scene, 0, 0, 'Completion page LATEST UPDATED');\r\n            this._bgComplete.setOrigin(0, 0);\r\n            this._bgComplete.setInteractive();\r\n            this._cup = new Phaser.GameObjects.Image(this.scene, 400, 410, 'Trophy');\r\n            this._btnBack = new Phaser.GameObjects.Image(this.scene, 570, 570, 'btnBACK1');\r\n            this._btnReplay = new Phaser.GameObjects.Image(this.scene, 720, 570, 'btnReplay1');\r\n            this._btnNext = new Phaser.GameObjects.Image(this.scene, 870, 570, 'btnNEXT1');\r\n\r\n            let _CollectedPoints = new Phaser.GameObjects.Image(this.scene, 620, 440, 'Collected Points');\r\n\r\n            this.totalScoreTxt = this.scene.add.text(845, 352, \"\", {\r\n                \"fontFamily\": \"Kids Rock Demo\",\r\n                \"fontSize\": 35,\r\n                \"color\": \"#F49F1C\",\r\n                \"align\": 'center',\r\n                'stroke': '#70451A',\r\n                'strokeThickness': 6\r\n            });\r\n            this.totalScoreTxt.setOrigin(0.5, 0.5);\r\n\r\n            let grd = this.totalScoreTxt.context.createLinearGradient(0, 0, 0, this.totalScoreTxt.height);\r\n            grd.addColorStop(0, '#FFFF00');\r\n            grd.addColorStop(1, '#C17316');\r\n            this.totalScoreTxt.setFill(grd);\r\n\r\n            this.starScoreTxt = this.scene.add.text(648, 433, \"\", {\r\n                \"fontFamily\": \"Kids Rock Demo\",\r\n                \"fontSize\": 24,\r\n                \"color\": \"#FFFFFF\",\r\n                \"align\": 'center'\r\n            });\r\n            this.starScoreTxt.setOrigin(0.5, 0.5);\r\n\r\n            this.add([\r\n                this._bgComplete,\r\n                _CollectedPoints,\r\n                this._cup,\r\n                this._btnBack,\r\n                this._btnReplay,\r\n                this._btnNext,\r\n                this.totalScoreTxt,\r\n                this.starScoreTxt\r\n            ]);\r\n\r\n            this._btnBack.setInteractive({cursor: 'pointer'});\r\n            this._btnBack.on('pointerup', ()=>{\r\n                onBack(this._btnBack);\r\n                // if (this.music) {\r\n                //     this.music.stop();\r\n                // }\r\n            });\r\n            setupButtonTextureBased(this._btnBack, 'btnBACK1', 'btnBACK2');\r\n            this._btnReplay.setInteractive({cursor: 'pointer'});\r\n            this._btnReplay.once('pointerup', ()=>{\r\n                onReplay(this._btnReplay);\r\n                if (this.music) {\r\n                    this.music.stop();\r\n                }\r\n            });\r\n            setupButtonTextureBased(this._btnReplay, 'btnReplay1', 'btnReplay2');\r\n            this._btnNext.setInteractive({cursor: 'pointer'});\r\n            this._btnNext.on('pointerup', ()=>{\r\n                onNext(this._btnNext);\r\n                // if (this.music) {\r\n                //     this.music.stop();\r\n                // }\r\n            });\r\n            setupButtonTextureBased(this._btnNext, 'btnNEXT1', 'btnNEXT2');\r\n        }\r\n\r\n        private music = null;\r\n        public show(score:number, starScore:number):void {\r\n            this._cup.scale = 1.25;\r\n            this.scene.tweens.add({\r\n                targets: this._cup,\r\n                \"scale\": 1,\r\n                duration: 500,\r\n                ease: Phaser.Math.Easing.Back.Out\r\n            });\r\n\r\n            this.totalScoreTxt.text = String(score);\r\n            this.starScoreTxt.text = String(starScore);\r\n\r\n            // let music = this.scene.sound.add(\"viktory\");\r\n            this.music = this.scene.sound.add(\"Activity completion fantastic\");\r\n            this.music.play();\r\n        }\r\n    }\r\n}","namespace sh.screen {\r\n\r\n    import Gameplay = sh.core.Gameplay;\r\n\r\n    export class GameplayScreen extends Phaser.GameObjects.Container {\r\n        _gameStage: Phaser.GameObjects.Image;\r\n        _btnSound: Phaser.GameObjects.Image;\r\n        _btnClose: Phaser.GameObjects.Image;\r\n\r\n        private gameplayContainer: Phaser.GameObjects.Container;\r\n\r\n        hexagons: Phaser.GameObjects.Container[];\r\n        letters: Phaser.GameObjects.Image[];\r\n\r\n        gameplay: Gameplay;\r\n\r\n        private bgMusic:any = null;\r\n\r\n        constructor(scene: Phaser.Scene, gameplay: Gameplay) {\r\n            super(scene);\r\n            this.gameplay = gameplay;\r\n        }\r\n\r\n        public showGameplay(): void {\r\n            setPageBackground(\"bg-australia\");\r\n\r\n            this.bgMusic = this.scene.sound.add(\"bg_sound\");\r\n            this.bgMusic.play();\r\n            this.bgMusic.loop = true;\r\n\r\n            this.gameplay.reset();\r\n\r\n            this._gameStage = new Phaser.GameObjects.Image(this.scene, game.scale.width / 2, game.scale.height / 2, null);\r\n            this._gameStage.setOrigin(0.488, 0.476);\r\n            this._gameStage.setInteractive();\r\n            this._btnSound = new Phaser.GameObjects.Image(this.scene, 160-105, 100-50, 'Sound');\r\n            this._btnSound.setInteractive({cursor: 'pointer'});\r\n            setupButtonTextureBased(this._btnSound, 'Sound','Sound HOVER EFFECT');\r\n            this._btnClose = new Phaser.GameObjects.Image(this.scene, 1025-105, 100-50,'x Button');\r\n            this._btnClose.setInteractive({cursor: 'pointer'});\r\n            setupButtonTextureBased(this._btnClose, 'x Button','x Button HOVER EFFECT');\r\n\r\n            this.gameplayContainer = new Phaser.GameObjects.Container(this.scene);\r\n            this.addAt(this.gameplayContainer, 0);\r\n\r\n            this.gameplayContainer.add([\r\n                this._gameStage,\r\n                this._btnSound,\r\n                this._btnClose\r\n            ]);\r\n\r\n            // this.createInput();\r\n            this.gameplay.setupCallbacks(this.showCompleteWindow, this.showLoseWindow);\r\n        }\r\n\r\n        private soundGooseYes = null;\r\n        public onCorrectAnswer(): boolean {\r\n            let completed:boolean = this.gameplay.onCorrectAnswer();\r\n\r\n            this.soundGooseYes = this.scene.sound.add(\"Goose Yes\");\r\n            this.soundGooseYes.play();\r\n\r\n            return completed;\r\n        }\r\n\r\n        private soundGooseNo = null;\r\n        public onWrongAnswer(): boolean {\r\n            let lost:boolean = this.gameplay.onWrongAnswer();\r\n\r\n            this.soundGooseNo = this.scene.sound.add(\"Goose no\");\r\n            this.soundGooseNo.play();\r\n\r\n            return lost;\r\n        }\r\n\r\n        private correctAudio = null;\r\n        private playCorrectAudio():void {\r\n            if (this.correctAudio) {\r\n                this.correctAudio.stop();\r\n            }\r\n            this.correctAudio = this.scene.sound.add(this.gameplay.getCorrectAudioKey());\r\n            this.correctAudio.play();\r\n            if (this.areYouSureWindow && this.areYouSureWindow.parentContainer == this) {\r\n                this.correctAudio.pause();\r\n            }\r\n        }\r\n\r\n        public onSoundClick(): void {\r\n            this.playCorrectAudio();\r\n        }\r\n\r\n        public onCloseClick(): void {\r\n            this.showAreYouSurePage();\r\n        }\r\n\r\n        private playBtnClickAnim(target): void {\r\n            target.scaleX = target.scaleY = 1;\r\n            this.scene.tweens.add({\r\n                targets: target,\r\n                \"scaleX\": 0.9,\r\n                \"scaleY\": 0.9,\r\n                duration: 100,\r\n                yoyo: true\r\n            });\r\n        }\r\n\r\n        private wfsnd = null;\r\n        private instructionPage: InstructionPage;\r\n        public showInstructionPage(): void {\r\n            setPageBackground(\"bg-blue\");\r\n\r\n            let playInstructionSound:()=>void = ()=>{\r\n                if (this.wfsnd) {\r\n                    this.wfsnd.stop();\r\n                }\r\n                this.wfsnd = this.scene.sound.add(\"Welcome Find the sound\");\r\n                this.wfsnd.play();\r\n            };\r\n\r\n            this.instructionPage = new InstructionPage(this.scene, (target) => {\r\n                this.playBtnClickAnim(target);\r\n                this.remove(this.instructionPage);\r\n                this.showGameplay();\r\n\r\n                if (this.wfsnd) {\r\n                    this.wfsnd.stop();\r\n                }\r\n            },(target) => {\r\n                this.playBtnClickAnim(target);\r\n                playInstructionSound();\r\n            });\r\n            this.add(this.instructionPage);\r\n            playInstructionSound();\r\n        }\r\n\r\n        private areYouSureWindow:AreYouSureWindow;\r\n        public showAreYouSurePage(): void {\r\n            setPageBackground(\"bg-blue\");\r\n\r\n            this.pauseSounds();\r\n\r\n            this.areYouSureWindow = new AreYouSureWindow(this.scene, ()=> {\r\n                this.remove(this.areYouSureWindow);\r\n                this.destroyGameplay();\r\n                this.showInstructionPage();\r\n            },()=> {\r\n                this.remove(this.areYouSureWindow);\r\n                this.unpauseSounds();\r\n                setPageBackground(\"bg-australia\");\r\n            });\r\n            this.add(this.areYouSureWindow);\r\n        }\r\n\r\n        public showCompleteWindow: (score: number, starScore: number) => void = (score: number, starScore: number) => {\r\n            let completeWindow: CompleteWindow = new CompleteWindow(this.scene, (target) => {\r\n                this.playBtnClickAnim(target);\r\n            }, (target) => {\r\n                this.playBtnClickAnim(target);\r\n                this.destroyGameplay();\r\n                this.remove(completeWindow);\r\n                this.showInstructionPage();\r\n            }, (target) => {\r\n                this.playBtnClickAnim(target);\r\n            });\r\n            this.setInputEnabled(false);\r\n            delayedCall(750, () => {\r\n                setPageBackground(\"bg-blue\");\r\n\r\n                this.add(completeWindow);\r\n                completeWindow.show(score, starScore);\r\n\r\n                this.bgMusic.stop();\r\n            });\r\n        };\r\n\r\n        public showLoseWindow: (score: number, starScore: number) => void = (score: number, starScore: number) => {\r\n            let tryAgainWindow: TryAgainWindow = new TryAgainWindow(this.scene, (target) => {\r\n                this.playBtnClickAnim(target);\r\n            }, (target) => {\r\n                this.playBtnClickAnim(target);\r\n                this.destroyGameplay();\r\n                this.remove(tryAgainWindow);\r\n                this.showInstructionPage();\r\n            });\r\n            this.setInputEnabled(false);\r\n            delayedCall(750, () => {\r\n                setPageBackground(\"bg-blue\");\r\n\r\n                this.add(tryAgainWindow);\r\n                tryAgainWindow.show(score, starScore);\r\n\r\n                this.bgMusic.stop();\r\n            });\r\n        };\r\n\r\n        public setInputEnabled(enabled: boolean): void {\r\n            if (enabled) {\r\n                for (let hc of this.hexagons) {\r\n                    hc[\"bg\"].setInteractive({cursor: 'pointer'});\r\n                }\r\n            } else {\r\n                for (let hc of this.hexagons) {\r\n                    hc[\"bg\"].disableInteractive();\r\n                }\r\n            }\r\n        }\r\n\r\n        public pauseSounds():void {\r\n            if (this.soundGooseYes) this.soundGooseYes.stop();\r\n            if (this.soundGooseNo) this.soundGooseNo.stop();\r\n            if (this.correctAudio) this.correctAudio.pause();\r\n            if (this.bgMusic) this.bgMusic.pause();\r\n        }\r\n\r\n        public unpauseSounds():void {\r\n            if (this.correctAudio) this.correctAudio.resume();\r\n            if (this.bgMusic) this.bgMusic.resume();\r\n        }\r\n\r\n        public destroyGameplay():void {\r\n            this.setInputEnabled(false);\r\n            this.remove(this.gameplayContainer);\r\n            destroyAllDelayedCalls();\r\n        }\r\n    }\r\n}","namespace sh.screen {\r\n    export class InstructionPage extends Phaser.GameObjects.Container {\r\n\r\n        private _instructionPage: Phaser.GameObjects.Image;\r\n        private _instructionPageTitle: Phaser.GameObjects.Image;\r\n        private _btnPlay: Phaser.GameObjects.Image;\r\n        private _btnSoundInstruction: Phaser.GameObjects.Image;\r\n        private instrTxt: Phaser.GameObjects.Text;\r\n\r\n        constructor(scene: Phaser.Scene, onPlayClick:(target)=>void, onSndClick:(target)=>void) {\r\n            super(scene);\r\n\r\n            this._instructionPage = new Phaser.GameObjects.Image(this.scene, 0-105, 0-48, 'Instructions page  ALL ACTIVITY  TITLEs');\r\n            this._instructionPage.setOrigin(0, 0);\r\n            this._instructionPage.setInteractive();\r\n\r\n            this._instructionPageTitle = new Phaser.GameObjects.Image(this.scene, 495, 105, 'welcome');\r\n\r\n            this._btnPlay = new Phaser.GameObjects.Image(this.scene, game.scale.width / 2, 480 - 50, 'btnPLAY1');\r\n            this._btnPlay.setInteractive({cursor: 'pointer'});\r\n            this._btnPlay.once('pointerup', onPlayClick);\r\n            setupButtonTextureBased(this._btnPlay, 'btnPLAY1', 'btnPLAY2');\r\n\r\n            this.instrTxt = this.scene.add.text(game.scale.width / 2, game.scale.height / 2, \"Find the sound.\", {\r\n                \"fontFamily\": \"Kids Rock Demo\",\r\n                \"fontSize\": 37,\r\n                \"color\": \"#A25122\",\r\n                \"align\": 'center',\r\n                'stroke': '#FFFFFF',\r\n                'strokeThickness': 6,\r\n            });\r\n            this.instrTxt.setOrigin(0.5, 0.5);\r\n\r\n            this._btnSoundInstruction = new Phaser.GameObjects.Image(this.scene, 800 - 105, 156 - 50, 'Sound');\r\n            this._btnSoundInstruction.setInteractive({cursor: 'pointer'});\r\n            this._btnSoundInstruction.on('pointerup', onSndClick);\r\n            setupButtonTextureBased(this._btnSoundInstruction, 'Sound','Sound HOVER EFFECT');\r\n\r\n            this.add(this._instructionPage);\r\n            this.add(this._instructionPageTitle);\r\n            this.add(this.instrTxt);\r\n            this.add(this._btnPlay);\r\n            this.add(this._btnSoundInstruction);\r\n        }\r\n    }\r\n}"]}